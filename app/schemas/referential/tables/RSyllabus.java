/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.referential.Keys;
import schemas.referential.Referential;
import schemas.referential.tables.records.RSyllabusRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RSyllabus extends TableImpl<RSyllabusRecord> {

    private static final long serialVersionUID = -1466662959;

    /**
     * The reference instance of <code>referential.r_syllabus</code>
     */
    public static final RSyllabus R_SYLLABUS = new RSyllabus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RSyllabusRecord> getRecordType() {
        return RSyllabusRecord.class;
    }

    /**
     * The column <code>referential.r_syllabus.id</code>.
     */
    public final TableField<RSyllabusRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('referential.r_syllabus_name_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "\n");

    /**
     * The column <code>referential.r_syllabus.name_</code>.
     */
    public final TableField<RSyllabusRecord, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>referential.r_syllabus.description</code>.
     */
    public final TableField<RSyllabusRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>referential.r_syllabus</code> table reference
     */
    public RSyllabus() {
        this("r_syllabus", null);
    }

    /**
     * Create an aliased <code>referential.r_syllabus</code> table reference
     */
    public RSyllabus(String alias) {
        this(alias, R_SYLLABUS);
    }

    private RSyllabus(String alias, Table<RSyllabusRecord> aliased) {
        this(alias, aliased, null);
    }

    private RSyllabus(String alias, Table<RSyllabusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referential.REFERENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RSyllabusRecord, Long> getIdentity() {
        return Keys.IDENTITY_R_SYLLABUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RSyllabusRecord> getPrimaryKey() {
        return Keys.R_SYLLABUS_NAME_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RSyllabusRecord>> getKeys() {
        return Arrays.<UniqueKey<RSyllabusRecord>>asList(Keys.R_SYLLABUS_NAME_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RSyllabus as(String alias) {
        return new RSyllabus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RSyllabus rename(String name) {
        return new RSyllabus(name, null);
    }
}
