/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.referential.Keys;
import schemas.referential.Referential;
import schemas.referential.tables.records.RUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RUser extends TableImpl<RUserRecord> {

    private static final long serialVersionUID = 1175352691;

    /**
     * The reference instance of <code>referential.r_user</code>
     */
    public static final RUser R_USER = new RUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RUserRecord> getRecordType() {
        return RUserRecord.class;
    }

    /**
     * The column <code>referential.r_user.email</code>.
     */
    public final TableField<RUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.name_</code>.
     */
    public final TableField<RUserRecord, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.password_</code>.
     */
    public final TableField<RUserRecord, String> PASSWORD_ = createField("password_", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.profil</code>.
     */
    public final TableField<RUserRecord, String> PROFIL = createField("profil", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.status</code>.
     */
    public final TableField<RUserRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.when_delete</code>.
     */
    public final TableField<RUserRecord, Timestamp> WHEN_DELETE = createField("when_delete", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_user.when_done</code>.
     */
    public final TableField<RUserRecord, Timestamp> WHEN_DONE = createField("when_done", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_user.when_update</code>.
     */
    public final TableField<RUserRecord, Timestamp> WHEN_UPDATE = createField("when_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_user.who_done</code>.
     */
    public final TableField<RUserRecord, String> WHO_DONE = createField("who_done", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>referential.r_user.id</code>.
     */
    public final TableField<RUserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('referential.r_user_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>referential.r_user.code</code>.
     */
    public final TableField<RUserRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * Create a <code>referential.r_user</code> table reference
     */
    public RUser() {
        this("r_user", null);
    }

    /**
     * Create an aliased <code>referential.r_user</code> table reference
     */
    public RUser(String alias) {
        this(alias, R_USER);
    }

    private RUser(String alias, Table<RUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private RUser(String alias, Table<RUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referential.REFERENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RUserRecord, Long> getIdentity() {
        return Keys.IDENTITY_R_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RUserRecord> getPrimaryKey() {
        return Keys.R_USER_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RUserRecord>> getKeys() {
        return Arrays.<UniqueKey<RUserRecord>>asList(Keys.R_USER_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RUser as(String alias) {
        return new RUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RUser rename(String name) {
        return new RUser(name, null);
    }
}
