/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.referential.Keys;
import schemas.referential.Referential;
import schemas.referential.tables.records.RTeachOutcomeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RTeachOutcome extends TableImpl<RTeachOutcomeRecord> {

    private static final long serialVersionUID = 1214684545;

    /**
     * The reference instance of <code>referential.r_teach_outcome</code>
     */
    public static final RTeachOutcome R_TEACH_OUTCOME = new RTeachOutcome();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RTeachOutcomeRecord> getRecordType() {
        return RTeachOutcomeRecord.class;
    }

    /**
     * The column <code>referential.r_teach_outcome.id</code>.
     */
    public final TableField<RTeachOutcomeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('referential.r_teach_outcome_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>referential.r_teach_outcome.outcome</code>.
     */
    public final TableField<RTeachOutcomeRecord, String> OUTCOME = createField("outcome", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>referential.r_teach_outcome</code> table reference
     */
    public RTeachOutcome() {
        this("r_teach_outcome", null);
    }

    /**
     * Create an aliased <code>referential.r_teach_outcome</code> table reference
     */
    public RTeachOutcome(String alias) {
        this(alias, R_TEACH_OUTCOME);
    }

    private RTeachOutcome(String alias, Table<RTeachOutcomeRecord> aliased) {
        this(alias, aliased, null);
    }

    private RTeachOutcome(String alias, Table<RTeachOutcomeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referential.REFERENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RTeachOutcomeRecord, Long> getIdentity() {
        return Keys.IDENTITY_R_TEACH_OUTCOME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RTeachOutcomeRecord> getPrimaryKey() {
        return Keys.R_TEACH_OUTCOME_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RTeachOutcomeRecord>> getKeys() {
        return Arrays.<UniqueKey<RTeachOutcomeRecord>>asList(Keys.R_TEACH_OUTCOME_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RTeachOutcome as(String alias) {
        return new RTeachOutcome(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RTeachOutcome rename(String name) {
        return new RTeachOutcome(name, null);
    }
}
