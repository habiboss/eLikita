/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.referential.tables.RUser;
import schemas.referential.tables.records.RUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RUserDao extends DAOImpl<RUserRecord, schemas.referential.tables.pojos.RUser, Long> {

    /**
     * Create a new RUserDao without any configuration
     */
    public RUserDao() {
        super(RUser.R_USER, schemas.referential.tables.pojos.RUser.class);
    }

    /**
     * Create a new RUserDao with an attached configuration
     */
    public RUserDao(Configuration configuration) {
        super(RUser.R_USER, schemas.referential.tables.pojos.RUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.referential.tables.pojos.RUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByEmail(String... values) {
        return fetch(RUser.R_USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>name_ IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByName_(String... values) {
        return fetch(RUser.R_USER.NAME_, values);
    }

    /**
     * Fetch records that have <code>password_ IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByPassword_(String... values) {
        return fetch(RUser.R_USER.PASSWORD_, values);
    }

    /**
     * Fetch records that have <code>profil IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByProfil(String... values) {
        return fetch(RUser.R_USER.PROFIL, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByStatus(String... values) {
        return fetch(RUser.R_USER.STATUS, values);
    }

    /**
     * Fetch records that have <code>when_delete IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByWhenDelete(Timestamp... values) {
        return fetch(RUser.R_USER.WHEN_DELETE, values);
    }

    /**
     * Fetch records that have <code>when_done IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByWhenDone(Timestamp... values) {
        return fetch(RUser.R_USER.WHEN_DONE, values);
    }

    /**
     * Fetch records that have <code>when_update IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByWhenUpdate(Timestamp... values) {
        return fetch(RUser.R_USER.WHEN_UPDATE, values);
    }

    /**
     * Fetch records that have <code>who_done IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByWhoDone(String... values) {
        return fetch(RUser.R_USER.WHO_DONE, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchById(Long... values) {
        return fetch(RUser.R_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.referential.tables.pojos.RUser fetchOneById(Long value) {
        return fetchOne(RUser.R_USER.ID, value);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<schemas.referential.tables.pojos.RUser> fetchByCode(String... values) {
        return fetch(RUser.R_USER.CODE, values);
    }
}
