/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RUser implements Serializable {

    private static final long serialVersionUID = -1893191366;

    private String    email;
    private String    name_;
    private String    password_;
    private String    profil;
    private String    status;
    private Timestamp whenDelete;
    private Timestamp whenDone;
    private Timestamp whenUpdate;
    private String    whoDone;
    private Long      id;
    private String    code;

    public RUser() {}

    public RUser(RUser value) {
        this.email = value.email;
        this.name_ = value.name_;
        this.password_ = value.password_;
        this.profil = value.profil;
        this.status = value.status;
        this.whenDelete = value.whenDelete;
        this.whenDone = value.whenDone;
        this.whenUpdate = value.whenUpdate;
        this.whoDone = value.whoDone;
        this.id = value.id;
        this.code = value.code;
    }

    public RUser(
        String    email,
        String    name_,
        String    password_,
        String    profil,
        String    status,
        Timestamp whenDelete,
        Timestamp whenDone,
        Timestamp whenUpdate,
        String    whoDone,
        Long      id,
        String    code
    ) {
        this.email = email;
        this.name_ = name_;
        this.password_ = password_;
        this.profil = profil;
        this.status = status;
        this.whenDelete = whenDelete;
        this.whenDone = whenDone;
        this.whenUpdate = whenUpdate;
        this.whoDone = whoDone;
        this.id = id;
        this.code = code;
    }

    @Size(max = 255)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Size(max = 255)
    public String getName_() {
        return this.name_;
    }

    public void setName_(String name_) {
        this.name_ = name_;
    }

    @Size(max = 255)
    public String getPassword_() {
        return this.password_;
    }

    public void setPassword_(String password_) {
        this.password_ = password_;
    }

    @Size(max = 255)
    public String getProfil() {
        return this.profil;
    }

    public void setProfil(String profil) {
        this.profil = profil;
    }

    @Size(max = 255)
    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Timestamp getWhenDelete() {
        return this.whenDelete;
    }

    public void setWhenDelete(Timestamp whenDelete) {
        this.whenDelete = whenDelete;
    }

    public Timestamp getWhenDone() {
        return this.whenDone;
    }

    public void setWhenDone(Timestamp whenDone) {
        this.whenDone = whenDone;
    }

    public Timestamp getWhenUpdate() {
        return this.whenUpdate;
    }

    public void setWhenUpdate(Timestamp whenUpdate) {
        this.whenUpdate = whenUpdate;
    }

    @Size(max = 255)
    public String getWhoDone() {
        return this.whoDone;
    }

    public void setWhoDone(String whoDone) {
        this.whoDone = whoDone;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Size(max = 20)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RUser (");

        sb.append(email);
        sb.append(", ").append(name_);
        sb.append(", ").append(password_);
        sb.append(", ").append(profil);
        sb.append(", ").append(status);
        sb.append(", ").append(whenDelete);
        sb.append(", ").append(whenDone);
        sb.append(", ").append(whenUpdate);
        sb.append(", ").append(whoDone);
        sb.append(", ").append(id);
        sb.append(", ").append(code);

        sb.append(")");
        return sb.toString();
    }
}
