/*
 * This file is generated by jOOQ.
*/
package schemas.referential.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.referential.Keys;
import schemas.referential.Referential;
import schemas.referential.tables.records.RProfilRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RProfil extends TableImpl<RProfilRecord> {

    private static final long serialVersionUID = 941732907;

    /**
     * The reference instance of <code>referential.r_profil</code>
     */
    public static final RProfil R_PROFIL = new RProfil();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RProfilRecord> getRecordType() {
        return RProfilRecord.class;
    }

    /**
     * The column <code>referential.r_profil.id</code>.
     */
    public final TableField<RProfilRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('referential.r_profil_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>referential.r_profil.code</code>.
     */
    public final TableField<RProfilRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(2).nullable(false), this, "");

    /**
     * The column <code>referential.r_profil.name_</code>.
     */
    public final TableField<RProfilRecord, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>referential.r_profil.when_delete</code>.
     */
    public final TableField<RProfilRecord, Timestamp> WHEN_DELETE = createField("when_delete", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_profil.when_done</code>.
     */
    public final TableField<RProfilRecord, Timestamp> WHEN_DONE = createField("when_done", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_profil.when_update</code>.
     */
    public final TableField<RProfilRecord, Timestamp> WHEN_UPDATE = createField("when_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>referential.r_profil.who_done</code>.
     */
    public final TableField<RProfilRecord, String> WHO_DONE = createField("who_done", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>referential.r_profil</code> table reference
     */
    public RProfil() {
        this("r_profil", null);
    }

    /**
     * Create an aliased <code>referential.r_profil</code> table reference
     */
    public RProfil(String alias) {
        this(alias, R_PROFIL);
    }

    private RProfil(String alias, Table<RProfilRecord> aliased) {
        this(alias, aliased, null);
    }

    private RProfil(String alias, Table<RProfilRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Referential.REFERENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RProfilRecord, Long> getIdentity() {
        return Keys.IDENTITY_R_PROFIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RProfilRecord> getPrimaryKey() {
        return Keys.R_PROFIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RProfilRecord>> getKeys() {
        return Arrays.<UniqueKey<RProfilRecord>>asList(Keys.R_PROFIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RProfil as(String alias) {
        return new RProfil(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RProfil rename(String name) {
        return new RProfil(name, null);
    }
}
