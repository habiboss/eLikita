/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.ContactPersonStudentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactPersonStudent extends TableImpl<ContactPersonStudentRecord> {

    private static final long serialVersionUID = -1669430674;

    /**
     * The reference instance of <code>administrator.contact_person_student</code>
     */
    public static final ContactPersonStudent CONTACT_PERSON_STUDENT = new ContactPersonStudent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContactPersonStudentRecord> getRecordType() {
        return ContactPersonStudentRecord.class;
    }

    /**
     * The column <code>administrator.contact_person_student.id</code>.
     */
    public final TableField<ContactPersonStudentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.contact_person_student_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>administrator.contact_person_student.contact_person_fk</code>.
     */
    public final TableField<ContactPersonStudentRecord, Long> CONTACT_PERSON_FK = createField("contact_person_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>administrator.contact_person_student.student_fk</code>.
     */
    public final TableField<ContactPersonStudentRecord, String> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.contact_person_student.contact_person_type_fk</code>.
     */
    public final TableField<ContactPersonStudentRecord, Long> CONTACT_PERSON_TYPE_FK = createField("contact_person_type_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>administrator.contact_person_student</code> table reference
     */
    public ContactPersonStudent() {
        this("contact_person_student", null);
    }

    /**
     * Create an aliased <code>administrator.contact_person_student</code> table reference
     */
    public ContactPersonStudent(String alias) {
        this(alias, CONTACT_PERSON_STUDENT);
    }

    private ContactPersonStudent(String alias, Table<ContactPersonStudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactPersonStudent(String alias, Table<ContactPersonStudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContactPersonStudentRecord, Long> getIdentity() {
        return Keys.IDENTITY_CONTACT_PERSON_STUDENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContactPersonStudentRecord> getPrimaryKey() {
        return Keys.CONTACT_PERSON_STUDENT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContactPersonStudentRecord>> getKeys() {
        return Arrays.<UniqueKey<ContactPersonStudentRecord>>asList(Keys.CONTACT_PERSON_STUDENT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudent as(String alias) {
        return new ContactPersonStudent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContactPersonStudent rename(String name) {
        return new ContactPersonStudent(name, null);
    }
}
