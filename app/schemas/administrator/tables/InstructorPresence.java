/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.InstructorPresenceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstructorPresence extends TableImpl<InstructorPresenceRecord> {

    private static final long serialVersionUID = 2141180829;

    /**
     * The reference instance of <code>administrator.instructor_presence</code>
     */
    public static final InstructorPresence INSTRUCTOR_PRESENCE = new InstructorPresence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstructorPresenceRecord> getRecordType() {
        return InstructorPresenceRecord.class;
    }

    /**
     * The column <code>administrator.instructor_presence.instructor_fk</code>.
     */
    public final TableField<InstructorPresenceRecord, String> INSTRUCTOR_FK = createField("instructor_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.instructor_presence.class_schedule_fk</code>.
     */
    public final TableField<InstructorPresenceRecord, String> CLASS_SCHEDULE_FK = createField("class_schedule_fk", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>administrator.instructor_presence.present</code>.
     */
    public final TableField<InstructorPresenceRecord, Boolean> PRESENT = createField("present", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>administrator.instructor_presence.dates</code>.
     */
    public final TableField<InstructorPresenceRecord, Timestamp> DATES = createField("dates", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.instructor_presence.additional_info</code>.
     */
    public final TableField<InstructorPresenceRecord, String> ADDITIONAL_INFO = createField("additional_info", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.instructor_presence.id</code>.
     */
    public final TableField<InstructorPresenceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.instructor_presence_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>administrator.instructor_presence</code> table reference
     */
    public InstructorPresence() {
        this("instructor_presence", null);
    }

    /**
     * Create an aliased <code>administrator.instructor_presence</code> table reference
     */
    public InstructorPresence(String alias) {
        this(alias, INSTRUCTOR_PRESENCE);
    }

    private InstructorPresence(String alias, Table<InstructorPresenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private InstructorPresence(String alias, Table<InstructorPresenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InstructorPresenceRecord, Long> getIdentity() {
        return Keys.IDENTITY_INSTRUCTOR_PRESENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstructorPresenceRecord> getPrimaryKey() {
        return Keys.INSTRUCTOR_PRESENCE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstructorPresenceRecord>> getKeys() {
        return Arrays.<UniqueKey<InstructorPresenceRecord>>asList(Keys.INSTRUCTOR_PRESENCE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InstructorPresence as(String alias) {
        return new InstructorPresence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InstructorPresence rename(String name) {
        return new InstructorPresence(name, null);
    }
}
