/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.administrator.tables.Transaction;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record6<Long, String, String, String, String, String> {

    private static final long serialVersionUID = 1102888721;

    /**
     * Setter for <code>administrator.transaction.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>administrator.transaction.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>administrator.transaction.fee_fk</code>.
     */
    public void setFeeFk(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>administrator.transaction.fee_fk</code>.
     */
    @Size(max = 10)
    public String getFeeFk() {
        return (String) get(1);
    }

    /**
     * Setter for <code>administrator.transaction.student_fk</code>.
     */
    public void setStudentFk(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>administrator.transaction.student_fk</code>.
     */
    @Size(max = 30)
    public String getStudentFk() {
        return (String) get(2);
    }

    /**
     * Setter for <code>administrator.transaction.amount</code>.
     */
    public void setAmount(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>administrator.transaction.amount</code>.
     */
    @Size(max = 10)
    public String getAmount() {
        return (String) get(3);
    }

    /**
     * Setter for <code>administrator.transaction.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>administrator.transaction.description</code>.
     */
    @Size(max = 50)
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>administrator.transaction.remarks</code>.
     */
    public void setRemarks(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>administrator.transaction.remarks</code>.
     */
    @Size(max = 50)
    public String getRemarks() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Transaction.TRANSACTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Transaction.TRANSACTION.FEE_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Transaction.TRANSACTION.STUDENT_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Transaction.TRANSACTION.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Transaction.TRANSACTION.REMARKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFeeFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStudentFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getRemarks();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value2(String value) {
        setFeeFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value3(String value) {
        setStudentFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value4(String value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value6(String value) {
        setRemarks(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord values(Long value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Long id, String feeFk, String studentFk, String amount, String description, String remarks) {
        super(Transaction.TRANSACTION);

        set(0, id);
        set(1, feeFk);
        set(2, studentFk);
        set(3, amount);
        set(4, description);
        set(5, remarks);
    }
}
