/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.administrator.tables.ContactPersonStudent;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactPersonStudentRecord extends UpdatableRecordImpl<ContactPersonStudentRecord> implements Record4<Long, Long, String, Long> {

    private static final long serialVersionUID = -1354154938;

    /**
     * Setter for <code>administrator.contact_person_student.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>administrator.contact_person_student.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>administrator.contact_person_student.contact_person_fk</code>.
     */
    public void setContactPersonFk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>administrator.contact_person_student.contact_person_fk</code>.
     */
    public Long getContactPersonFk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>administrator.contact_person_student.student_fk</code>.
     */
    public void setStudentFk(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>administrator.contact_person_student.student_fk</code>.
     */
    @Size(max = 50)
    public String getStudentFk() {
        return (String) get(2);
    }

    /**
     * Setter for <code>administrator.contact_person_student.contact_person_type_fk</code>.
     */
    public void setContactPersonTypeFk(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>administrator.contact_person_student.contact_person_type_fk</code>.
     */
    public Long getContactPersonTypeFk() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, String, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ContactPersonStudent.CONTACT_PERSON_STUDENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ContactPersonStudent.CONTACT_PERSON_STUDENT.CONTACT_PERSON_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ContactPersonStudent.CONTACT_PERSON_STUDENT.STUDENT_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return ContactPersonStudent.CONTACT_PERSON_STUDENT.CONTACT_PERSON_TYPE_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getContactPersonFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getStudentFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getContactPersonTypeFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudentRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudentRecord value2(Long value) {
        setContactPersonFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudentRecord value3(String value) {
        setStudentFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudentRecord value4(Long value) {
        setContactPersonTypeFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactPersonStudentRecord values(Long value1, Long value2, String value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ContactPersonStudentRecord
     */
    public ContactPersonStudentRecord() {
        super(ContactPersonStudent.CONTACT_PERSON_STUDENT);
    }

    /**
     * Create a detached, initialised ContactPersonStudentRecord
     */
    public ContactPersonStudentRecord(Long id, Long contactPersonFk, String studentFk, Long contactPersonTypeFk) {
        super(ContactPersonStudent.CONTACT_PERSON_STUDENT);

        set(0, id);
        set(1, contactPersonFk);
        set(2, studentFk);
        set(3, contactPersonTypeFk);
    }
}
