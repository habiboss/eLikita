/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.administrator.tables.Fees;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeesRecord extends UpdatableRecordImpl<FeesRecord> implements Record6<Long, String, BigDecimal, String, String, String> {

    private static final long serialVersionUID = 1478458178;

    /**
     * Setter for <code>administrator.fees.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>administrator.fees.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>administrator.fees.fee_heading</code>.
     */
    public void setFeeHeading(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>administrator.fees.fee_heading</code>.
     */
    @Size(max = 20)
    public String getFeeHeading() {
        return (String) get(1);
    }

    /**
     * Setter for <code>administrator.fees.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>administrator.fees.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>administrator.fees.class_fk</code>.
     */
    public void setClassFk(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>administrator.fees.class_fk</code>.
     */
    @Size(max = 15)
    public String getClassFk() {
        return (String) get(3);
    }

    /**
     * Setter for <code>administrator.fees.fee_type_fk</code>.
     */
    public void setFeeTypeFk(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>administrator.fees.fee_type_fk</code>.
     */
    @Size(max = 15)
    public String getFeeTypeFk() {
        return (String) get(4);
    }

    /**
     * Setter for <code>administrator.fees.code</code>.
     */
    public void setCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>administrator.fees.code</code>.
     */
    @Size(max = 10)
    public String getCode() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, BigDecimal, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, BigDecimal, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Fees.FEES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Fees.FEES.FEE_HEADING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Fees.FEES.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Fees.FEES.CLASS_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Fees.FEES.FEE_TYPE_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Fees.FEES.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getFeeHeading();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getClassFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFeeTypeFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value2(String value) {
        setFeeHeading(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value3(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value4(String value) {
        setClassFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value5(String value) {
        setFeeTypeFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord value6(String value) {
        setCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FeesRecord values(Long value1, String value2, BigDecimal value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeesRecord
     */
    public FeesRecord() {
        super(Fees.FEES);
    }

    /**
     * Create a detached, initialised FeesRecord
     */
    public FeesRecord(Long id, String feeHeading, BigDecimal amount, String classFk, String feeTypeFk, String code) {
        super(Fees.FEES);

        set(0, id);
        set(1, feeHeading);
        set(2, amount);
        set(3, classFk);
        set(4, feeTypeFk);
        set(5, code);
    }
}
