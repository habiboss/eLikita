/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.RoUsersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoUsers extends TableImpl<RoUsersRecord> {

    private static final long serialVersionUID = -868141729;

    /**
     * The reference instance of <code>administrator.ro_users</code>
     */
    public static final RoUsers RO_USERS = new RoUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoUsersRecord> getRecordType() {
        return RoUsersRecord.class;
    }

    /**
     * The column <code>administrator.ro_users.id</code>.
     */
    public final TableField<RoUsersRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.ro_utilisateurs_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>administrator.ro_users.user</code>.
     */
    public final TableField<RoUsersRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.user_type</code>.
     */
    public final TableField<RoUsersRecord, String> USER_TYPE = createField("user_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.comptable</code>.
     */
    public final TableField<RoUsersRecord, String> COMPTABLE = createField("comptable", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.service</code>.
     */
    public final TableField<RoUsersRecord, String> SERVICE = createField("service", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.user_name</code>.
     */
    public final TableField<RoUsersRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.date_created</code>.
     */
    public final TableField<RoUsersRecord, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.ro_users.disable_date</code>.
     */
    public final TableField<RoUsersRecord, Timestamp> DISABLE_DATE = createField("disable_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.ro_users.disabled</code>.
     */
    public final TableField<RoUsersRecord, Boolean> DISABLED = createField("disabled", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>administrator.ro_users.granted_process</code>.
     */
    public final TableField<RoUsersRecord, String> GRANTED_PROCESS = createField("granted_process", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.ro_users.granted_numbering</code>.
     */
    public final TableField<RoUsersRecord, String> GRANTED_NUMBERING = createField("granted_numbering", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * Create a <code>administrator.ro_users</code> table reference
     */
    public RoUsers() {
        this("ro_users", null);
    }

    /**
     * Create an aliased <code>administrator.ro_users</code> table reference
     */
    public RoUsers(String alias) {
        this(alias, RO_USERS);
    }

    private RoUsers(String alias, Table<RoUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoUsers(String alias, Table<RoUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoUsersRecord, Long> getIdentity() {
        return Keys.IDENTITY_RO_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoUsersRecord> getPrimaryKey() {
        return Keys.RO_USERS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<RoUsersRecord>>asList(Keys.RO_USERS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoUsers as(String alias) {
        return new RoUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoUsers rename(String name) {
        return new RoUsers(name, null);
    }
}
