/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.StudentPresenceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentPresence extends TableImpl<StudentPresenceRecord> {

    private static final long serialVersionUID = 33480121;

    /**
     * The reference instance of <code>administrator.student_presence</code>
     */
    public static final StudentPresence STUDENT_PRESENCE = new StudentPresence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentPresenceRecord> getRecordType() {
        return StudentPresenceRecord.class;
    }

    /**
     * The column <code>administrator.student_presence.student_fk</code>.
     */
    public final TableField<StudentPresenceRecord, String> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.student_presence.class_schedule_fk</code>.
     */
    public final TableField<StudentPresenceRecord, String> CLASS_SCHEDULE_FK = createField("class_schedule_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.student_presence.present</code>.
     */
    public final TableField<StudentPresenceRecord, Boolean> PRESENT = createField("present", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>administrator.student_presence.dates</code>.
     */
    public final TableField<StudentPresenceRecord, Timestamp> DATES = createField("dates", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.student_presence.additional_info</code>.
     */
    public final TableField<StudentPresenceRecord, String> ADDITIONAL_INFO = createField("additional_info", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.student_presence.id</code>.
     */
    public final TableField<StudentPresenceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.student_presence_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>administrator.student_presence</code> table reference
     */
    public StudentPresence() {
        this("student_presence", null);
    }

    /**
     * Create an aliased <code>administrator.student_presence</code> table reference
     */
    public StudentPresence(String alias) {
        this(alias, STUDENT_PRESENCE);
    }

    private StudentPresence(String alias, Table<StudentPresenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private StudentPresence(String alias, Table<StudentPresenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StudentPresenceRecord, Long> getIdentity() {
        return Keys.IDENTITY_STUDENT_PRESENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StudentPresenceRecord> getPrimaryKey() {
        return Keys.STUDENT_PRESENCE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StudentPresenceRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentPresenceRecord>>asList(Keys.STUDENT_PRESENCE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentPresence as(String alias) {
        return new StudentPresence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StudentPresence rename(String name) {
        return new StudentPresence(name, null);
    }
}
