/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.JourneeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Journee extends TableImpl<JourneeRecord> {

    private static final long serialVersionUID = 167808543;

    /**
     * The reference instance of <code>administrator.journee</code>
     */
    public static final Journee JOURNEE = new Journee();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JourneeRecord> getRecordType() {
        return JourneeRecord.class;
    }

    /**
     * The column <code>administrator.journee.id</code>.
     */
    public final TableField<JourneeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.journee_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>administrator.journee.journee</code>.
     */
    public final TableField<JourneeRecord, String> JOURNEE_ = createField("journee", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>administrator.journee.etat</code>.
     */
    public final TableField<JourneeRecord, Boolean> ETAT = createField("etat", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>administrator.journee.owner</code>.
     */
    public final TableField<JourneeRecord, String> OWNER = createField("owner", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>administrator.journee.last_update</code>.
     */
    public final TableField<JourneeRecord, Timestamp> LAST_UPDATE = createField("last_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>administrator.journee</code> table reference
     */
    public Journee() {
        this("journee", null);
    }

    /**
     * Create an aliased <code>administrator.journee</code> table reference
     */
    public Journee(String alias) {
        this(alias, JOURNEE);
    }

    private Journee(String alias, Table<JourneeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Journee(String alias, Table<JourneeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JourneeRecord, Long> getIdentity() {
        return Keys.IDENTITY_JOURNEE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JourneeRecord> getPrimaryKey() {
        return Keys.JOURNEE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JourneeRecord>> getKeys() {
        return Arrays.<UniqueKey<JourneeRecord>>asList(Keys.JOURNEE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Journee as(String alias) {
        return new Journee(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Journee rename(String name) {
        return new Journee(name, null);
    }
}
