/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.LogInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogInfo extends TableImpl<LogInfoRecord> {

    private static final long serialVersionUID = -585428123;

    /**
     * The reference instance of <code>administrator.log_info</code>
     */
    public static final LogInfo LOG_INFO = new LogInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogInfoRecord> getRecordType() {
        return LogInfoRecord.class;
    }

    /**
     * The column <code>administrator.log_info.id</code>.
     */
    public final TableField<LogInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.log_info_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>administrator.log_info.log_name</code>.
     */
    public final TableField<LogInfoRecord, String> LOG_NAME = createField("log_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>administrator.log_info.code</code>.
     */
    public final TableField<LogInfoRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>administrator.log_info.description</code>.
     */
    public final TableField<LogInfoRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * Create a <code>administrator.log_info</code> table reference
     */
    public LogInfo() {
        this("log_info", null);
    }

    /**
     * Create an aliased <code>administrator.log_info</code> table reference
     */
    public LogInfo(String alias) {
        this(alias, LOG_INFO);
    }

    private LogInfo(String alias, Table<LogInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private LogInfo(String alias, Table<LogInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LogInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_LOG_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogInfoRecord> getPrimaryKey() {
        return Keys.LOG_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<LogInfoRecord>>asList(Keys.LOG_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogInfo as(String alias) {
        return new LogInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LogInfo rename(String name) {
        return new LogInfo(name, null);
    }
}
