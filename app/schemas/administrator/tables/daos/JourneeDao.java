/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.administrator.tables.Journee;
import schemas.administrator.tables.records.JourneeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JourneeDao extends DAOImpl<JourneeRecord, schemas.administrator.tables.pojos.Journee, Long> {

    /**
     * Create a new JourneeDao without any configuration
     */
    public JourneeDao() {
        super(Journee.JOURNEE, schemas.administrator.tables.pojos.Journee.class);
    }

    /**
     * Create a new JourneeDao with an attached configuration
     */
    public JourneeDao(Configuration configuration) {
        super(Journee.JOURNEE, schemas.administrator.tables.pojos.Journee.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.administrator.tables.pojos.Journee object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.Journee> fetchById(Long... values) {
        return fetch(Journee.JOURNEE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.administrator.tables.pojos.Journee fetchOneById(Long value) {
        return fetchOne(Journee.JOURNEE.ID, value);
    }

    /**
     * Fetch records that have <code>journee IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.Journee> fetchByJournee(String... values) {
        return fetch(Journee.JOURNEE.JOURNEE_, values);
    }

    /**
     * Fetch records that have <code>etat IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.Journee> fetchByEtat(Boolean... values) {
        return fetch(Journee.JOURNEE.ETAT, values);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.Journee> fetchByOwner(String... values) {
        return fetch(Journee.JOURNEE.OWNER, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.Journee> fetchByLastUpdate(Timestamp... values) {
        return fetch(Journee.JOURNEE.LAST_UPDATE, values);
    }
}
