/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.administrator.tables.ApplicationUser;
import schemas.administrator.tables.records.ApplicationUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationUserDao extends DAOImpl<ApplicationUserRecord, schemas.administrator.tables.pojos.ApplicationUser, Long> {

    /**
     * Create a new ApplicationUserDao without any configuration
     */
    public ApplicationUserDao() {
        super(ApplicationUser.APPLICATION_USER, schemas.administrator.tables.pojos.ApplicationUser.class);
    }

    /**
     * Create a new ApplicationUserDao with an attached configuration
     */
    public ApplicationUserDao(Configuration configuration) {
        super(ApplicationUser.APPLICATION_USER, schemas.administrator.tables.pojos.ApplicationUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.administrator.tables.pojos.ApplicationUser object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchById(Long... values) {
        return fetch(ApplicationUser.APPLICATION_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.administrator.tables.pojos.ApplicationUser fetchOneById(Long value) {
        return fetchOne(ApplicationUser.APPLICATION_USER.ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByName(String... values) {
        return fetch(ApplicationUser.APPLICATION_USER.NAME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByEmail(String... values) {
        return fetch(ApplicationUser.APPLICATION_USER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public schemas.administrator.tables.pojos.ApplicationUser fetchOneByEmail(String value) {
        return fetchOne(ApplicationUser.APPLICATION_USER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByPassword(String... values) {
        return fetch(ApplicationUser.APPLICATION_USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByIsActive(Boolean... values) {
        return fetch(ApplicationUser.APPLICATION_USER.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>meta_data IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByMetaData(String... values) {
        return fetch(ApplicationUser.APPLICATION_USER.META_DATA, values);
    }

    /**
     * Fetch records that have <code>last_update IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByLastUpdate(Timestamp... values) {
        return fetch(ApplicationUser.APPLICATION_USER.LAST_UPDATE, values);
    }

    /**
     * Fetch records that have <code>is_admin IN (values)</code>
     */
    public List<schemas.administrator.tables.pojos.ApplicationUser> fetchByIsAdmin(Boolean... values) {
        return fetch(ApplicationUser.APPLICATION_USER.IS_ADMIN, values);
    }
}
