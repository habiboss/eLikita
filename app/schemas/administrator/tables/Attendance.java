/*
 * This file is generated by jOOQ.
*/
package schemas.administrator.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.administrator.Administrator;
import schemas.administrator.Keys;
import schemas.administrator.tables.records.AttendanceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attendance extends TableImpl<AttendanceRecord> {

    private static final long serialVersionUID = 1002988173;

    /**
     * The reference instance of <code>administrator.attendance</code>
     */
    public static final Attendance ATTENDANCE = new Attendance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AttendanceRecord> getRecordType() {
        return AttendanceRecord.class;
    }

    /**
     * The column <code>administrator.attendance.id</code>.
     */
    public final TableField<AttendanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('administrator.attendance_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>administrator.attendance.student_fk</code>.
     */
    public final TableField<AttendanceRecord, String> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>administrator.attendance.class_fk</code>.
     */
    public final TableField<AttendanceRecord, String> CLASS_FK = createField("class_fk", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>administrator.attendance.class_enrollment_date</code>.
     */
    public final TableField<AttendanceRecord, Timestamp> CLASS_ENROLLMENT_DATE = createField("class_enrollment_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.attendance.class_drop_date</code>.
     */
    public final TableField<AttendanceRecord, Timestamp> CLASS_DROP_DATE = createField("class_drop_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>administrator.attendance.drop_class_reason_fk</code>.
     */
    public final TableField<AttendanceRecord, Long> DROP_CLASS_REASON_FK = createField("drop_class_reason_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>administrator.attendance.attendance_outcome_fk</code>.
     */
    public final TableField<AttendanceRecord, Long> ATTENDANCE_OUTCOME_FK = createField("attendance_outcome_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>administrator.attendance</code> table reference
     */
    public Attendance() {
        this("attendance", null);
    }

    /**
     * Create an aliased <code>administrator.attendance</code> table reference
     */
    public Attendance(String alias) {
        this(alias, ATTENDANCE);
    }

    private Attendance(String alias, Table<AttendanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Attendance(String alias, Table<AttendanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Administrator.ADMINISTRATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AttendanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_ATTENDANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AttendanceRecord> getPrimaryKey() {
        return Keys.ATTENDANCE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AttendanceRecord>> getKeys() {
        return Arrays.<UniqueKey<AttendanceRecord>>asList(Keys.ATTENDANCE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Attendance as(String alias) {
        return new Attendance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Attendance rename(String name) {
        return new Attendance(name, null);
    }
}
