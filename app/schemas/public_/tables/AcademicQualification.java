/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.AcademicQualificationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AcademicQualification extends TableImpl<AcademicQualificationRecord> {

    private static final long serialVersionUID = -194401390;

    /**
     * The reference instance of <code>public.academic_qualification</code>
     */
    public static final AcademicQualification ACADEMIC_QUALIFICATION = new AcademicQualification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AcademicQualificationRecord> getRecordType() {
        return AcademicQualificationRecord.class;
    }

    /**
     * The column <code>public.academic_qualification.id</code>.
     */
    public final TableField<AcademicQualificationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.academic_qualification.country</code>.
     */
    public final TableField<AcademicQualificationRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.date_of_award</code>.
     */
    public final TableField<AcademicQualificationRecord, String> DATE_OF_AWARD = createField("date_of_award", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.end_date</code>.
     */
    public final TableField<AcademicQualificationRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.academic_qualification.institution_name</code>.
     */
    public final TableField<AcademicQualificationRecord, String> INSTITUTION_NAME = createField("institution_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.other_achievement</code>.
     */
    public final TableField<AcademicQualificationRecord, String> OTHER_ACHIEVEMENT = createField("other_achievement", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.title_of_qualification</code>.
     */
    public final TableField<AcademicQualificationRecord, String> TITLE_OF_QUALIFICATION = createField("title_of_qualification", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.result</code>.
     */
    public final TableField<AcademicQualificationRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.academic_qualification.start_date</code>.
     */
    public final TableField<AcademicQualificationRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.academic_qualification.subject</code>.
     */
    public final TableField<AcademicQualificationRecord, String> SUBJECT = createField("subject", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.academic_qualification</code> table reference
     */
    public AcademicQualification() {
        this("academic_qualification", null);
    }

    /**
     * Create an aliased <code>public.academic_qualification</code> table reference
     */
    public AcademicQualification(String alias) {
        this(alias, ACADEMIC_QUALIFICATION);
    }

    private AcademicQualification(String alias, Table<AcademicQualificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private AcademicQualification(String alias, Table<AcademicQualificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AcademicQualificationRecord> getPrimaryKey() {
        return Keys.ACADEMIC_QUALIFICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AcademicQualificationRecord>> getKeys() {
        return Arrays.<UniqueKey<AcademicQualificationRecord>>asList(Keys.ACADEMIC_QUALIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AcademicQualification as(String alias) {
        return new AcademicQualification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AcademicQualification rename(String name) {
        return new AcademicQualification(name, null);
    }
}
