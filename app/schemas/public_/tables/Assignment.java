/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.AssignmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assignment extends TableImpl<AssignmentRecord> {

    private static final long serialVersionUID = -1051800356;

    /**
     * The reference instance of <code>public.assignment</code>
     */
    public static final Assignment ASSIGNMENT = new Assignment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssignmentRecord> getRecordType() {
        return AssignmentRecord.class;
    }

    /**
     * The column <code>public.assignment.id</code>.
     */
    public final TableField<AssignmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('assignment_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.assignment.title</code>.
     */
    public final TableField<AssignmentRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.assignment.description</code>.
     */
    public final TableField<AssignmentRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.assignment.course_fk</code>.
     */
    public final TableField<AssignmentRecord, Long> COURSE_FK = createField("course_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.assignment.batch_fk</code>.
     */
    public final TableField<AssignmentRecord, Long> BATCH_FK = createField("batch_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.assignment.subject_fk</code>.
     */
    public final TableField<AssignmentRecord, Long> SUBJECT_FK = createField("subject_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.assignment.date_submission</code>.
     */
    public final TableField<AssignmentRecord, Timestamp> DATE_SUBMISSION = createField("date_submission", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.assignment</code> table reference
     */
    public Assignment() {
        this("assignment", null);
    }

    /**
     * Create an aliased <code>public.assignment</code> table reference
     */
    public Assignment(String alias) {
        this(alias, ASSIGNMENT);
    }

    private Assignment(String alias, Table<AssignmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Assignment(String alias, Table<AssignmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssignmentRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASSIGNMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssignmentRecord> getPrimaryKey() {
        return Keys.ASSIGNMENT_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssignmentRecord>> getKeys() {
        return Arrays.<UniqueKey<AssignmentRecord>>asList(Keys.ASSIGNMENT_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Assignment as(String alias) {
        return new Assignment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Assignment rename(String name) {
        return new Assignment(name, null);
    }
}
