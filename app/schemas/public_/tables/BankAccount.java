/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.BankAccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankAccount extends TableImpl<BankAccountRecord> {

    private static final long serialVersionUID = -75364561;

    /**
     * The reference instance of <code>public.bank_account</code>
     */
    public static final BankAccount BANK_ACCOUNT = new BankAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BankAccountRecord> getRecordType() {
        return BankAccountRecord.class;
    }

    /**
     * The column <code>public.bank_account.id</code>.
     */
    public final TableField<BankAccountRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.bank_account.account_number</code>.
     */
    public final TableField<BankAccountRecord, Long> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.bank_account.sort_code</code>.
     */
    public final TableField<BankAccountRecord, String> SORT_CODE = createField("sort_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.bank_account.student_id</code>.
     */
    public final TableField<BankAccountRecord, Long> STUDENT_ID = createField("student_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.bank_account</code> table reference
     */
    public BankAccount() {
        this("bank_account", null);
    }

    /**
     * Create an aliased <code>public.bank_account</code> table reference
     */
    public BankAccount(String alias) {
        this(alias, BANK_ACCOUNT);
    }

    private BankAccount(String alias, Table<BankAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private BankAccount(String alias, Table<BankAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BankAccountRecord> getPrimaryKey() {
        return Keys.BANK_ACCOUNT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BankAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<BankAccountRecord>>asList(Keys.BANK_ACCOUNT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BankAccountRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BankAccountRecord, ?>>asList(Keys.BANK_ACCOUNT__FK70TBNLF24EOLTV2UGSWCOAYDF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankAccount as(String alias) {
        return new BankAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BankAccount rename(String name) {
        return new BankAccount(name, null);
    }
}
