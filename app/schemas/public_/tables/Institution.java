/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.InstitutionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Institution extends TableImpl<InstitutionRecord> {

    private static final long serialVersionUID = 262631610;

    /**
     * The reference instance of <code>public.institution</code>
     */
    public static final Institution INSTITUTION = new Institution();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstitutionRecord> getRecordType() {
        return InstitutionRecord.class;
    }

    /**
     * The column <code>public.institution.id</code>.
     */
    public final TableField<InstitutionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.institution.created</code>.
     */
    public final TableField<InstitutionRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.institution.industry</code>.
     */
    public final TableField<InstitutionRecord, String> INDUSTRY = createField("industry", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.address</code>.
     */
    public final TableField<InstitutionRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.city</code>.
     */
    public final TableField<InstitutionRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.code</code>.
     */
    public final TableField<InstitutionRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.country</code>.
     */
    public final TableField<InstitutionRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.currency</code>.
     */
    public final TableField<InstitutionRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.email</code>.
     */
    public final TableField<InstitutionRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.fax</code>.
     */
    public final TableField<InstitutionRecord, String> FAX = createField("fax", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.language</code>.
     */
    public final TableField<InstitutionRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.logo</code>.
     */
    public final TableField<InstitutionRecord, String> LOGO = createField("logo", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.mobile</code>.
     */
    public final TableField<InstitutionRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.name</code>.
     */
    public final TableField<InstitutionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.phone</code>.
     */
    public final TableField<InstitutionRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.postcode</code>.
     */
    public final TableField<InstitutionRecord, String> POSTCODE = createField("postcode", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.region</code>.
     */
    public final TableField<InstitutionRecord, String> REGION = createField("region", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.timezone</code>.
     */
    public final TableField<InstitutionRecord, String> TIMEZONE = createField("timezone", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.website</code>.
     */
    public final TableField<InstitutionRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.institution.status</code>.
     */
    public final TableField<InstitutionRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.institution</code> table reference
     */
    public Institution() {
        this("institution", null);
    }

    /**
     * Create an aliased <code>public.institution</code> table reference
     */
    public Institution(String alias) {
        this(alias, INSTITUTION);
    }

    private Institution(String alias, Table<InstitutionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Institution(String alias, Table<InstitutionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstitutionRecord> getPrimaryKey() {
        return Keys.INSTITUTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstitutionRecord>> getKeys() {
        return Arrays.<UniqueKey<InstitutionRecord>>asList(Keys.INSTITUTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Institution as(String alias) {
        return new Institution(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Institution rename(String name) {
        return new Institution(name, null);
    }
}
