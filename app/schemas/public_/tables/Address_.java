/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.Address_Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Address_ extends TableImpl<Address_Record> {

    private static final long serialVersionUID = -2075908231;

    /**
     * The reference instance of <code>public.address_</code>
     */
    public static final Address_ ADDRESS_ = new Address_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Address_Record> getRecordType() {
        return Address_Record.class;
    }

    /**
     * The column <code>public.address_.id</code>.
     */
    public final TableField<Address_Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('address__id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.address_.line_1</code>.
     */
    public final TableField<Address_Record, String> LINE_1 = createField("line_1", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.address_.line_2</code>.
     */
    public final TableField<Address_Record, String> LINE_2 = createField("line_2", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.address_.city</code>.
     */
    public final TableField<Address_Record, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.address_.state</code>.
     */
    public final TableField<Address_Record, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.address_.country_fk</code>.
     */
    public final TableField<Address_Record, Long> COUNTRY_FK = createField("country_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.address_.other_detail</code>.
     */
    public final TableField<Address_Record, String> OTHER_DETAIL = createField("other_detail", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * Create a <code>public.address_</code> table reference
     */
    public Address_() {
        this("address_", null);
    }

    /**
     * Create an aliased <code>public.address_</code> table reference
     */
    public Address_(String alias) {
        this(alias, ADDRESS_);
    }

    private Address_(String alias, Table<Address_Record> aliased) {
        this(alias, aliased, null);
    }

    private Address_(String alias, Table<Address_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Address_Record, Long> getIdentity() {
        return Keys.IDENTITY_ADDRESS_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Address_Record> getPrimaryKey() {
        return Keys.ADDRESS__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Address_Record>> getKeys() {
        return Arrays.<UniqueKey<Address_Record>>asList(Keys.ADDRESS__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Address_ as(String alias) {
        return new Address_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Address_ rename(String name) {
        return new Address_(name, null);
    }
}
