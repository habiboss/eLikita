/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.BatchRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Batch extends TableImpl<BatchRecord> {

    private static final long serialVersionUID = -1675059555;

    /**
     * The reference instance of <code>public.batch</code>
     */
    public static final Batch BATCH = new Batch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BatchRecord> getRecordType() {
        return BatchRecord.class;
    }

    /**
     * The column <code>public.batch.batch_name</code>.
     */
    public final TableField<BatchRecord, String> BATCH_NAME = createField("batch_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.batch.end_date</code>.
     */
    public final TableField<BatchRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.batch.max_student</code>.
     */
    public final TableField<BatchRecord, Long> MAX_STUDENT = createField("max_student", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.batch.start_date</code>.
     */
    public final TableField<BatchRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.batch.course_fk</code>.
     */
    public final TableField<BatchRecord, Long> COURSE_FK = createField("course_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.batch.id</code>.
     */
    public final TableField<BatchRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('batch_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.batch.course_id</code>.
     */
    public final TableField<BatchRecord, Long> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.batch</code> table reference
     */
    public Batch() {
        this("batch", null);
    }

    /**
     * Create an aliased <code>public.batch</code> table reference
     */
    public Batch(String alias) {
        this(alias, BATCH);
    }

    private Batch(String alias, Table<BatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private Batch(String alias, Table<BatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BatchRecord, Long> getIdentity() {
        return Keys.IDENTITY_BATCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BatchRecord> getPrimaryKey() {
        return Keys.BATCH_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BatchRecord>> getKeys() {
        return Arrays.<UniqueKey<BatchRecord>>asList(Keys.BATCH_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Batch as(String alias) {
        return new Batch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Batch rename(String name) {
        return new Batch(name, null);
    }
}
