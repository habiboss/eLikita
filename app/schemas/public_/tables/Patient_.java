/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.Patient_Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Patient_ extends TableImpl<Patient_Record> {

    private static final long serialVersionUID = -1615199065;

    /**
     * The reference instance of <code>public.patient_</code>
     */
    public static final Patient_ PATIENT_ = new Patient_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Patient_Record> getRecordType() {
        return Patient_Record.class;
    }

    /**
     * The column <code>public.patient_.id</code>.
     */
    public final TableField<Patient_Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('patient__id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.patient_.address_fk</code>.
     */
    public final TableField<Patient_Record, Long> ADDRESS_FK = createField("address_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.patient_.first_name</code>.
     */
    public final TableField<Patient_Record, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.patient_.last_name</code>.
     */
    public final TableField<Patient_Record, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.patient_.middle_name</code>.
     */
    public final TableField<Patient_Record, String> MIDDLE_NAME = createField("middle_name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.patient_.gender</code>.
     */
    public final TableField<Patient_Record, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>public.patient_.date_of_birth</code>.
     */
    public final TableField<Patient_Record, Timestamp> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.patient_.date_created</code>.
     */
    public final TableField<Patient_Record, Timestamp> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.patient_.date_modified</code>.
     */
    public final TableField<Patient_Record, Timestamp> DATE_MODIFIED = createField("date_modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.patient_.phone</code>.
     */
    public final TableField<Patient_Record, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.patient_.email</code>.
     */
    public final TableField<Patient_Record, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.patient_.other_detail</code>.
     */
    public final TableField<Patient_Record, String> OTHER_DETAIL = createField("other_detail", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>public.patient_.date_deleted</code>.
     */
    public final TableField<Patient_Record, Timestamp> DATE_DELETED = createField("date_deleted", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.patient_</code> table reference
     */
    public Patient_() {
        this("patient_", null);
    }

    /**
     * Create an aliased <code>public.patient_</code> table reference
     */
    public Patient_(String alias) {
        this(alias, PATIENT_);
    }

    private Patient_(String alias, Table<Patient_Record> aliased) {
        this(alias, aliased, null);
    }

    private Patient_(String alias, Table<Patient_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Patient_Record, Long> getIdentity() {
        return Keys.IDENTITY_PATIENT_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Patient_Record> getPrimaryKey() {
        return Keys.PATIENT__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Patient_Record>> getKeys() {
        return Arrays.<UniqueKey<Patient_Record>>asList(Keys.PATIENT__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Patient_ as(String alias) {
        return new Patient_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Patient_ rename(String name) {
        return new Patient_(name, null);
    }
}
