/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.NationalityDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NationalityDetail extends TableImpl<NationalityDetailRecord> {

    private static final long serialVersionUID = -1165163217;

    /**
     * The reference instance of <code>public.nationality_detail</code>
     */
    public static final NationalityDetail NATIONALITY_DETAIL = new NationalityDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NationalityDetailRecord> getRecordType() {
        return NationalityDetailRecord.class;
    }

    /**
     * The column <code>public.nationality_detail.id</code>.
     */
    public final TableField<NationalityDetailRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('nationality_detail_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.nationality_detail.nationality_fk</code>.
     */
    public final TableField<NationalityDetailRecord, Long> NATIONALITY_FK = createField("nationality_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.nationality_detail.permanent_residence_fk</code>.
     */
    public final TableField<NationalityDetailRecord, Long> PERMANENT_RESIDENCE_FK = createField("permanent_residence_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.nationality_detail.residential_status_fk</code>.
     */
    public final TableField<NationalityDetailRecord, Long> RESIDENTIAL_STATUS_FK = createField("residential_status_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.nationality_detail.student_fk</code>.
     */
    public final TableField<NationalityDetailRecord, String> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.nationality_detail.passport_no</code>.
     */
    public final TableField<NationalityDetailRecord, String> PASSPORT_NO = createField("passport_no", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.nationality_detail.issue_date</code>.
     */
    public final TableField<NationalityDetailRecord, Timestamp> ISSUE_DATE = createField("issue_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.nationality_detail.expiry_date</code>.
     */
    public final TableField<NationalityDetailRecord, Timestamp> EXPIRY_DATE = createField("expiry_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.nationality_detail.issue_place</code>.
     */
    public final TableField<NationalityDetailRecord, String> ISSUE_PLACE = createField("issue_place", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.nationality_detail.name_on_passport</code>.
     */
    public final TableField<NationalityDetailRecord, String> NAME_ON_PASSPORT = createField("name_on_passport", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.nationality_detail.identification_type_fk</code>.
     */
    public final TableField<NationalityDetailRecord, Long> IDENTIFICATION_TYPE_FK = createField("identification_type_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.nationality_detail</code> table reference
     */
    public NationalityDetail() {
        this("nationality_detail", null);
    }

    /**
     * Create an aliased <code>public.nationality_detail</code> table reference
     */
    public NationalityDetail(String alias) {
        this(alias, NATIONALITY_DETAIL);
    }

    private NationalityDetail(String alias, Table<NationalityDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private NationalityDetail(String alias, Table<NationalityDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NationalityDetailRecord, Long> getIdentity() {
        return Keys.IDENTITY_NATIONALITY_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NationalityDetailRecord> getPrimaryKey() {
        return Keys.NATIONALITY_DETAIL_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NationalityDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<NationalityDetailRecord>>asList(Keys.NATIONALITY_DETAIL_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityDetail as(String alias) {
        return new NationalityDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NationalityDetail rename(String name) {
        return new NationalityDetail(name, null);
    }
}
