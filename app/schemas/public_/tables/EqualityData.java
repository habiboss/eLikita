/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.EqualityDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EqualityData extends TableImpl<EqualityDataRecord> {

    private static final long serialVersionUID = 1532209664;

    /**
     * The reference instance of <code>public.equality_data</code>
     */
    public static final EqualityData EQUALITY_DATA = new EqualityData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EqualityDataRecord> getRecordType() {
        return EqualityDataRecord.class;
    }

    /**
     * The column <code>public.equality_data.id</code>.
     */
    public final TableField<EqualityDataRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.equality_data.country_birth</code>.
     */
    public final TableField<EqualityDataRecord, String> COUNTRY_BIRTH = createField("country_birth", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.ethnic_origin</code>.
     */
    public final TableField<EqualityDataRecord, String> ETHNIC_ORIGIN = createField("ethnic_origin", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.learning_disabilities</code>.
     */
    public final TableField<EqualityDataRecord, String> LEARNING_DISABILITIES = createField("learning_disabilities", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.occupation</code>.
     */
    public final TableField<EqualityDataRecord, String> OCCUPATION = createField("occupation", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.original_gender</code>.
     */
    public final TableField<EqualityDataRecord, String> ORIGINAL_GENDER = createField("original_gender", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.religion</code>.
     */
    public final TableField<EqualityDataRecord, String> RELIGION = createField("religion", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.sexual_orientation</code>.
     */
    public final TableField<EqualityDataRecord, String> SEXUAL_ORIENTATION = createField("sexual_orientation", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.equality_data.socio_economic_classification</code>.
     */
    public final TableField<EqualityDataRecord, String> SOCIO_ECONOMIC_CLASSIFICATION = createField("socio_economic_classification", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.equality_data</code> table reference
     */
    public EqualityData() {
        this("equality_data", null);
    }

    /**
     * Create an aliased <code>public.equality_data</code> table reference
     */
    public EqualityData(String alias) {
        this(alias, EQUALITY_DATA);
    }

    private EqualityData(String alias, Table<EqualityDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private EqualityData(String alias, Table<EqualityDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EqualityDataRecord> getPrimaryKey() {
        return Keys.EQUALITY_DATA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EqualityDataRecord>> getKeys() {
        return Arrays.<UniqueKey<EqualityDataRecord>>asList(Keys.EQUALITY_DATA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EqualityData as(String alias) {
        return new EqualityData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EqualityData rename(String name) {
        return new EqualityData(name, null);
    }
}
