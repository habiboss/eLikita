/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.PersonalDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalDetail extends TableImpl<PersonalDetailRecord> {

    private static final long serialVersionUID = 2116401952;

    /**
     * The reference instance of <code>public.personal_detail</code>
     */
    public static final PersonalDetail PERSONAL_DETAIL = new PersonalDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonalDetailRecord> getRecordType() {
        return PersonalDetailRecord.class;
    }

    /**
     * The column <code>public.personal_detail.id</code>.
     */
    public final TableField<PersonalDetailRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.personal_detail.date_of_birth</code>.
     */
    public final TableField<PersonalDetailRecord, Timestamp> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.personal_detail.family_name</code>.
     */
    public final TableField<PersonalDetailRecord, String> FAMILY_NAME = createField("family_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.personal_detail.first_name</code>.
     */
    public final TableField<PersonalDetailRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.personal_detail.gender</code>.
     */
    public final TableField<PersonalDetailRecord, byte[]> GENDER = createField("gender", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>public.personal_detail.middle_name</code>.
     */
    public final TableField<PersonalDetailRecord, String> MIDDLE_NAME = createField("middle_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.personal_detail.prefered_name</code>.
     */
    public final TableField<PersonalDetailRecord, String> PREFERED_NAME = createField("prefered_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.personal_detail.title</code>.
     */
    public final TableField<PersonalDetailRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.personal_detail</code> table reference
     */
    public PersonalDetail() {
        this("personal_detail", null);
    }

    /**
     * Create an aliased <code>public.personal_detail</code> table reference
     */
    public PersonalDetail(String alias) {
        this(alias, PERSONAL_DETAIL);
    }

    private PersonalDetail(String alias, Table<PersonalDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonalDetail(String alias, Table<PersonalDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonalDetailRecord> getPrimaryKey() {
        return Keys.PERSONAL_DETAIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonalDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonalDetailRecord>>asList(Keys.PERSONAL_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetail as(String alias) {
        return new PersonalDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PersonalDetail rename(String name) {
        return new PersonalDetail(name, null);
    }
}
