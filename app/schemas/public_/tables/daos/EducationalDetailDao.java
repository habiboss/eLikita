/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.EducationalDetail;
import schemas.public_.tables.records.EducationalDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EducationalDetailDao extends DAOImpl<EducationalDetailRecord, schemas.public_.tables.pojos.EducationalDetail, Long> {

    /**
     * Create a new EducationalDetailDao without any configuration
     */
    public EducationalDetailDao() {
        super(EducationalDetail.EDUCATIONAL_DETAIL, schemas.public_.tables.pojos.EducationalDetail.class);
    }

    /**
     * Create a new EducationalDetailDao with an attached configuration
     */
    public EducationalDetailDao(Configuration configuration) {
        super(EducationalDetail.EDUCATIONAL_DETAIL, schemas.public_.tables.pojos.EducationalDetail.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.EducationalDetail object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchById(Long... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.EducationalDetail fetchOneById(Long value) {
        return fetchOne(EducationalDetail.EDUCATIONAL_DETAIL.ID, value);
    }

    /**
     * Fetch records that have <code>institution_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByInstitutionName(String... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.INSTITUTION_NAME, values);
    }

    /**
     * Fetch records that have <code>qualification_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByQualificationFk(Long... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.QUALIFICATION_FK, values);
    }

    /**
     * Fetch records that have <code>subject_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchBySubjectFk(Long... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.SUBJECT_FK, values);
    }

    /**
     * Fetch records that have <code>date_qualification_started IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByDateQualificationStarted(Timestamp... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.DATE_QUALIFICATION_STARTED, values);
    }

    /**
     * Fetch records that have <code>date_qualification_ended IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByDateQualificationEnded(Timestamp... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.DATE_QUALIFICATION_ENDED, values);
    }

    /**
     * Fetch records that have <code>final_grade IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByFinalGrade(BigDecimal... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.FINAL_GRADE, values);
    }

    /**
     * Fetch records that have <code>completed IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByCompleted(Boolean... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.COMPLETED, values);
    }

    /**
     * Fetch records that have <code>student_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EducationalDetail> fetchByStudentFk(String... values) {
        return fetch(EducationalDetail.EDUCATIONAL_DETAIL.STUDENT_FK, values);
    }
}
