/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.StudentDetail;
import schemas.public_.tables.records.StudentDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentDetailDao extends DAOImpl<StudentDetailRecord, schemas.public_.tables.pojos.StudentDetail, Long> {

    /**
     * Create a new StudentDetailDao without any configuration
     */
    public StudentDetailDao() {
        super(StudentDetail.STUDENT_DETAIL, schemas.public_.tables.pojos.StudentDetail.class);
    }

    /**
     * Create a new StudentDetailDao with an attached configuration
     */
    public StudentDetailDao(Configuration configuration) {
        super(StudentDetail.STUDENT_DETAIL, schemas.public_.tables.pojos.StudentDetail.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.StudentDetail object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>date_of_birth IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByDateOfBirth(Timestamp... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.DATE_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByTitle(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.TITLE, values);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByFirstName(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByLastName(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchById(Long... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.StudentDetail fetchOneById(Long value) {
        return fetchOne(StudentDetail.STUDENT_DETAIL.ID, value);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByGender(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.GENDER, values);
    }

    /**
     * Fetch records that have <code>code_ui IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByCodeUi(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.CODE_UI, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByStatus(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.STATUS, values);
    }

    /**
     * Fetch records that have <code>middle_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByMiddleName(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.MIDDLE_NAME, values);
    }

    /**
     * Fetch records that have <code>prefered_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByPreferedName(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.PREFERED_NAME, values);
    }

    /**
     * Fetch records that have <code>family_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.StudentDetail> fetchByFamilyName(String... values) {
        return fetch(StudentDetail.STUDENT_DETAIL.FAMILY_NAME, values);
    }
}
