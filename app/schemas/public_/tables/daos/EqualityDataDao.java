/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.EqualityData;
import schemas.public_.tables.records.EqualityDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EqualityDataDao extends DAOImpl<EqualityDataRecord, schemas.public_.tables.pojos.EqualityData, Long> {

    /**
     * Create a new EqualityDataDao without any configuration
     */
    public EqualityDataDao() {
        super(EqualityData.EQUALITY_DATA, schemas.public_.tables.pojos.EqualityData.class);
    }

    /**
     * Create a new EqualityDataDao with an attached configuration
     */
    public EqualityDataDao(Configuration configuration) {
        super(EqualityData.EQUALITY_DATA, schemas.public_.tables.pojos.EqualityData.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.EqualityData object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchById(Long... values) {
        return fetch(EqualityData.EQUALITY_DATA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.EqualityData fetchOneById(Long value) {
        return fetchOne(EqualityData.EQUALITY_DATA.ID, value);
    }

    /**
     * Fetch records that have <code>country_birth IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByCountryBirth(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.COUNTRY_BIRTH, values);
    }

    /**
     * Fetch records that have <code>ethnic_origin IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByEthnicOrigin(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.ETHNIC_ORIGIN, values);
    }

    /**
     * Fetch records that have <code>learning_disabilities IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByLearningDisabilities(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.LEARNING_DISABILITIES, values);
    }

    /**
     * Fetch records that have <code>occupation IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByOccupation(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.OCCUPATION, values);
    }

    /**
     * Fetch records that have <code>original_gender IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByOriginalGender(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.ORIGINAL_GENDER, values);
    }

    /**
     * Fetch records that have <code>religion IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchByReligion(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.RELIGION, values);
    }

    /**
     * Fetch records that have <code>sexual_orientation IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchBySexualOrientation(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.SEXUAL_ORIENTATION, values);
    }

    /**
     * Fetch records that have <code>socio_economic_classification IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EqualityData> fetchBySocioEconomicClassification(String... values) {
        return fetch(EqualityData.EQUALITY_DATA.SOCIO_ECONOMIC_CLASSIFICATION, values);
    }
}
