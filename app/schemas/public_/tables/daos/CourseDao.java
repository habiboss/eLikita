/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.Course;
import schemas.public_.tables.records.CourseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseDao extends DAOImpl<CourseRecord, schemas.public_.tables.pojos.Course, Long> {

    /**
     * Create a new CourseDao without any configuration
     */
    public CourseDao() {
        super(Course.COURSE, schemas.public_.tables.pojos.Course.class);
    }

    /**
     * Create a new CourseDao with an attached configuration
     */
    public CourseDao(Configuration configuration) {
        super(Course.COURSE, schemas.public_.tables.pojos.Course.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.Course object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByCode(String... values) {
        return fetch(Course.COURSE.CODE, values);
    }

    /**
     * Fetch records that have <code>department IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByDepartment(String... values) {
        return fetch(Course.COURSE.DEPARTMENT, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByTitle(String... values) {
        return fetch(Course.COURSE.TITLE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByStatus(String... values) {
        return fetch(Course.COURSE.STATUS, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchById(Long... values) {
        return fetch(Course.COURSE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.Course fetchOneById(Long value) {
        return fetchOne(Course.COURSE.ID, value);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByDescription(String... values) {
        return fetch(Course.COURSE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>syllabus_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchBySyllabusFk(Long... values) {
        return fetch(Course.COURSE.SYLLABUS_FK, values);
    }

    /**
     * Fetch records that have <code>attendance_type_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByAttendanceTypeFk(Long... values) {
        return fetch(Course.COURSE.ATTENDANCE_TYPE_FK, values);
    }

    /**
     * Fetch records that have <code>min_attendance_percentage IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByMinAttendancePercentage(Long... values) {
        return fetch(Course.COURSE.MIN_ATTENDANCE_PERCENTAGE, values);
    }

    /**
     * Fetch records that have <code>total_working_days IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByTotalWorkingDays(Long... values) {
        return fetch(Course.COURSE.TOTAL_WORKING_DAYS, values);
    }

    /**
     * Fetch records that have <code>academic_year IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByAcademicYear(String... values) {
        return fetch(Course.COURSE.ACADEMIC_YEAR, values);
    }

    /**
     * Fetch records that have <code>faculty IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByFaculty(String... values) {
        return fetch(Course.COURSE.FACULTY, values);
    }

    /**
     * Fetch records that have <code>location IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByLocation(String... values) {
        return fetch(Course.COURSE.LOCATION, values);
    }

    /**
     * Fetch records that have <code>mode_of_attendance IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByModeOfAttendance(String... values) {
        return fetch(Course.COURSE.MODE_OF_ATTENDANCE, values);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByStartDate(Timestamp... values) {
        return fetch(Course.COURSE.START_DATE, values);
    }

    /**
     * Fetch records that have <code>tutor IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByTutor(String... values) {
        return fetch(Course.COURSE.TUTOR, values);
    }

    /**
     * Fetch records that have <code>year_of_study IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Course> fetchByYearOfStudy(String... values) {
        return fetch(Course.COURSE.YEAR_OF_STUDY, values);
    }
}
