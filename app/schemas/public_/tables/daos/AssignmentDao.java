/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.Assignment;
import schemas.public_.tables.records.AssignmentRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssignmentDao extends DAOImpl<AssignmentRecord, schemas.public_.tables.pojos.Assignment, Long> {

    /**
     * Create a new AssignmentDao without any configuration
     */
    public AssignmentDao() {
        super(Assignment.ASSIGNMENT, schemas.public_.tables.pojos.Assignment.class);
    }

    /**
     * Create a new AssignmentDao with an attached configuration
     */
    public AssignmentDao(Configuration configuration) {
        super(Assignment.ASSIGNMENT, schemas.public_.tables.pojos.Assignment.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.Assignment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchById(Long... values) {
        return fetch(Assignment.ASSIGNMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.Assignment fetchOneById(Long value) {
        return fetchOne(Assignment.ASSIGNMENT.ID, value);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchByTitle(String... values) {
        return fetch(Assignment.ASSIGNMENT.TITLE, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchByDescription(String... values) {
        return fetch(Assignment.ASSIGNMENT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>course_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchByCourseFk(Long... values) {
        return fetch(Assignment.ASSIGNMENT.COURSE_FK, values);
    }

    /**
     * Fetch records that have <code>batch_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchByBatchFk(Long... values) {
        return fetch(Assignment.ASSIGNMENT.BATCH_FK, values);
    }

    /**
     * Fetch records that have <code>subject_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchBySubjectFk(Long... values) {
        return fetch(Assignment.ASSIGNMENT.SUBJECT_FK, values);
    }

    /**
     * Fetch records that have <code>date_submission IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Assignment> fetchByDateSubmission(Timestamp... values) {
        return fetch(Assignment.ASSIGNMENT.DATE_SUBMISSION, values);
    }
}
