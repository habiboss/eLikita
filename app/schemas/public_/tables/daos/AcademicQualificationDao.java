/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.AcademicQualification;
import schemas.public_.tables.records.AcademicQualificationRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AcademicQualificationDao extends DAOImpl<AcademicQualificationRecord, schemas.public_.tables.pojos.AcademicQualification, Long> {

    /**
     * Create a new AcademicQualificationDao without any configuration
     */
    public AcademicQualificationDao() {
        super(AcademicQualification.ACADEMIC_QUALIFICATION, schemas.public_.tables.pojos.AcademicQualification.class);
    }

    /**
     * Create a new AcademicQualificationDao with an attached configuration
     */
    public AcademicQualificationDao(Configuration configuration) {
        super(AcademicQualification.ACADEMIC_QUALIFICATION, schemas.public_.tables.pojos.AcademicQualification.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.AcademicQualification object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchById(Long... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.AcademicQualification fetchOneById(Long value) {
        return fetchOne(AcademicQualification.ACADEMIC_QUALIFICATION.ID, value);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByCountry(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>date_of_award IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByDateOfAward(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.DATE_OF_AWARD, values);
    }

    /**
     * Fetch records that have <code>end_date IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByEndDate(Timestamp... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.END_DATE, values);
    }

    /**
     * Fetch records that have <code>institution_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByInstitutionName(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.INSTITUTION_NAME, values);
    }

    /**
     * Fetch records that have <code>other_achievement IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByOtherAchievement(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.OTHER_ACHIEVEMENT, values);
    }

    /**
     * Fetch records that have <code>title_of_qualification IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByTitleOfQualification(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.TITLE_OF_QUALIFICATION, values);
    }

    /**
     * Fetch records that have <code>result IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByResult(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.RESULT, values);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchByStartDate(Timestamp... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.START_DATE, values);
    }

    /**
     * Fetch records that have <code>subject IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AcademicQualification> fetchBySubject(String... values) {
        return fetch(AcademicQualification.ACADEMIC_QUALIFICATION.SUBJECT, values);
    }
}
