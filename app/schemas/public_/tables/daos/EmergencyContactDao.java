/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.EmergencyContact;
import schemas.public_.tables.records.EmergencyContactRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmergencyContactDao extends DAOImpl<EmergencyContactRecord, schemas.public_.tables.pojos.EmergencyContact, Long> {

    /**
     * Create a new EmergencyContactDao without any configuration
     */
    public EmergencyContactDao() {
        super(EmergencyContact.EMERGENCY_CONTACT, schemas.public_.tables.pojos.EmergencyContact.class);
    }

    /**
     * Create a new EmergencyContactDao with an attached configuration
     */
    public EmergencyContactDao(Configuration configuration) {
        super(EmergencyContact.EMERGENCY_CONTACT, schemas.public_.tables.pojos.EmergencyContact.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.EmergencyContact object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByPhone(Long... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.PHONE, values);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByMobile(Long... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.MOBILE, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByEmail(String... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchById(Long... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.EmergencyContact fetchOneById(Long value) {
        return fetchOne(EmergencyContact.EMERGENCY_CONTACT.ID, value);
    }

    /**
     * Fetch records that have <code>full_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByFullName(String... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByAddress(String... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>relationship IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByRelationship(String... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.RELATIONSHIP, values);
    }

    /**
     * Fetch records that have <code>student_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.EmergencyContact> fetchByStudentFk(String... values) {
        return fetch(EmergencyContact.EMERGENCY_CONTACT.STUDENT_FK, values);
    }
}
