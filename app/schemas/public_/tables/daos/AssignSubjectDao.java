/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.AssignSubject;
import schemas.public_.tables.records.AssignSubjectRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssignSubjectDao extends DAOImpl<AssignSubjectRecord, schemas.public_.tables.pojos.AssignSubject, Long> {

    /**
     * Create a new AssignSubjectDao without any configuration
     */
    public AssignSubjectDao() {
        super(AssignSubject.ASSIGN_SUBJECT, schemas.public_.tables.pojos.AssignSubject.class);
    }

    /**
     * Create a new AssignSubjectDao with an attached configuration
     */
    public AssignSubjectDao(Configuration configuration) {
        super(AssignSubject.ASSIGN_SUBJECT, schemas.public_.tables.pojos.AssignSubject.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.AssignSubject object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AssignSubject> fetchById(Long... values) {
        return fetch(AssignSubject.ASSIGN_SUBJECT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.AssignSubject fetchOneById(Long value) {
        return fetchOne(AssignSubject.ASSIGN_SUBJECT.ID, value);
    }

    /**
     * Fetch records that have <code>course_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AssignSubject> fetchByCourseFk(Long... values) {
        return fetch(AssignSubject.ASSIGN_SUBJECT.COURSE_FK, values);
    }

    /**
     * Fetch records that have <code>batch_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AssignSubject> fetchByBatchFk(Long... values) {
        return fetch(AssignSubject.ASSIGN_SUBJECT.BATCH_FK, values);
    }

    /**
     * Fetch records that have <code>subject_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AssignSubject> fetchBySubjectFk(Long... values) {
        return fetch(AssignSubject.ASSIGN_SUBJECT.SUBJECT_FK, values);
    }
}
