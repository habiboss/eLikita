/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.AboutInstitution;
import schemas.public_.tables.records.AboutInstitutionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AboutInstitutionDao extends DAOImpl<AboutInstitutionRecord, schemas.public_.tables.pojos.AboutInstitution, Long> {

    /**
     * Create a new AboutInstitutionDao without any configuration
     */
    public AboutInstitutionDao() {
        super(AboutInstitution.ABOUT_INSTITUTION, schemas.public_.tables.pojos.AboutInstitution.class);
    }

    /**
     * Create a new AboutInstitutionDao with an attached configuration
     */
    public AboutInstitutionDao(Configuration configuration) {
        super(AboutInstitution.ABOUT_INSTITUTION, schemas.public_.tables.pojos.AboutInstitution.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.AboutInstitution object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>institution_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByInstitutionName(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.INSTITUTION_NAME, values);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByAddress(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByCity(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.CITY, values);
    }

    /**
     * Fetch records that have <code>codeid IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByCodeid(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.CODEID, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByCountry(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByDescription(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByEmail(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.EMAIL, values);
    }

    /**
     * Fetch records that have <code>postcode IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByPostcode(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.POSTCODE, values);
    }

    /**
     * Fetch records that have <code>region IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByRegion(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.REGION, values);
    }

    /**
     * Fetch records that have <code>website IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchByWebsite(String... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.WEBSITE, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AboutInstitution> fetchById(Long... values) {
        return fetch(AboutInstitution.ABOUT_INSTITUTION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.AboutInstitution fetchOneById(Long value) {
        return fetchOne(AboutInstitution.ABOUT_INSTITUTION.ID, value);
    }
}
