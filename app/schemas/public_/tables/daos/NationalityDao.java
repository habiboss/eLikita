/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.Nationality;
import schemas.public_.tables.records.NationalityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NationalityDao extends DAOImpl<NationalityRecord, schemas.public_.tables.pojos.Nationality, Long> {

    /**
     * Create a new NationalityDao without any configuration
     */
    public NationalityDao() {
        super(Nationality.NATIONALITY, schemas.public_.tables.pojos.Nationality.class);
    }

    /**
     * Create a new NationalityDao with an attached configuration
     */
    public NationalityDao(Configuration configuration) {
        super(Nationality.NATIONALITY, schemas.public_.tables.pojos.Nationality.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.Nationality object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Nationality> fetchById(Long... values) {
        return fetch(Nationality.NATIONALITY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.Nationality fetchOneById(Long value) {
        return fetchOne(Nationality.NATIONALITY.ID, value);
    }

    /**
     * Fetch records that have <code>country_birth IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Nationality> fetchByCountryBirth(String... values) {
        return fetch(Nationality.NATIONALITY.COUNTRY_BIRTH, values);
    }

    /**
     * Fetch records that have <code>nationality IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Nationality> fetchByNationality(String... values) {
        return fetch(Nationality.NATIONALITY.NATIONALITY_, values);
    }

    /**
     * Fetch records that have <code>second_nationality IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Nationality> fetchBySecondNationality(String... values) {
        return fetch(Nationality.NATIONALITY.SECOND_NATIONALITY, values);
    }

    /**
     * Fetch records that have <code>student_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Nationality> fetchByStudentFk(Long... values) {
        return fetch(Nationality.NATIONALITY.STUDENT_FK, values);
    }
}
