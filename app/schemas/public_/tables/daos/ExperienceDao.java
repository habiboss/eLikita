/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.Experience;
import schemas.public_.tables.records.ExperienceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperienceDao extends DAOImpl<ExperienceRecord, schemas.public_.tables.pojos.Experience, Long> {

    /**
     * Create a new ExperienceDao without any configuration
     */
    public ExperienceDao() {
        super(Experience.EXPERIENCE, schemas.public_.tables.pojos.Experience.class);
    }

    /**
     * Create a new ExperienceDao with an attached configuration
     */
    public ExperienceDao(Configuration configuration) {
        super(Experience.EXPERIENCE, schemas.public_.tables.pojos.Experience.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.Experience object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchById(Long... values) {
        return fetch(Experience.EXPERIENCE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.Experience fetchOneById(Long value) {
        return fetchOne(Experience.EXPERIENCE.ID, value);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByCity(String... values) {
        return fetch(Experience.EXPERIENCE.CITY, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByCountry(String... values) {
        return fetch(Experience.EXPERIENCE.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>employer_address IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByEmployerAddress(String... values) {
        return fetch(Experience.EXPERIENCE.EMPLOYER_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>employer_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByEmployerName(String... values) {
        return fetch(Experience.EXPERIENCE.EMPLOYER_NAME, values);
    }

    /**
     * Fetch records that have <code>end_date IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByEndDate(String... values) {
        return fetch(Experience.EXPERIENCE.END_DATE, values);
    }

    /**
     * Fetch records that have <code>job_title IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByJobTitle(String... values) {
        return fetch(Experience.EXPERIENCE.JOB_TITLE, values);
    }

    /**
     * Fetch records that have <code>responsibilities IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByResponsibilities(String... values) {
        return fetch(Experience.EXPERIENCE.RESPONSIBILITIES, values);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.Experience> fetchByStartDate(String... values) {
        return fetch(Experience.EXPERIENCE.START_DATE, values);
    }
}
