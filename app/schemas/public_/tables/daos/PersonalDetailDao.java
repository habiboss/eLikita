/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.PersonalDetail;
import schemas.public_.tables.records.PersonalDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalDetailDao extends DAOImpl<PersonalDetailRecord, schemas.public_.tables.pojos.PersonalDetail, Long> {

    /**
     * Create a new PersonalDetailDao without any configuration
     */
    public PersonalDetailDao() {
        super(PersonalDetail.PERSONAL_DETAIL, schemas.public_.tables.pojos.PersonalDetail.class);
    }

    /**
     * Create a new PersonalDetailDao with an attached configuration
     */
    public PersonalDetailDao(Configuration configuration) {
        super(PersonalDetail.PERSONAL_DETAIL, schemas.public_.tables.pojos.PersonalDetail.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.PersonalDetail object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchById(Long... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.PersonalDetail fetchOneById(Long value) {
        return fetchOne(PersonalDetail.PERSONAL_DETAIL.ID, value);
    }

    /**
     * Fetch records that have <code>date_of_birth IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByDateOfBirth(Timestamp... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.DATE_OF_BIRTH, values);
    }

    /**
     * Fetch records that have <code>family_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByFamilyName(String... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.FAMILY_NAME, values);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByFirstName(String... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByGender(byte[]... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.GENDER, values);
    }

    /**
     * Fetch records that have <code>middle_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByMiddleName(String... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.MIDDLE_NAME, values);
    }

    /**
     * Fetch records that have <code>prefered_name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByPreferedName(String... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.PREFERED_NAME, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.PersonalDetail> fetchByTitle(String... values) {
        return fetch(PersonalDetail.PERSONAL_DETAIL.TITLE, values);
    }
}
