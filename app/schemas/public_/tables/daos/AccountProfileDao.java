/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.AccountProfile;
import schemas.public_.tables.records.AccountProfileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountProfileDao extends DAOImpl<AccountProfileRecord, schemas.public_.tables.pojos.AccountProfile, Long> {

    /**
     * Create a new AccountProfileDao without any configuration
     */
    public AccountProfileDao() {
        super(AccountProfile.ACCOUNT_PROFILE, schemas.public_.tables.pojos.AccountProfile.class);
    }

    /**
     * Create a new AccountProfileDao with an attached configuration
     */
    public AccountProfileDao(Configuration configuration) {
        super(AccountProfile.ACCOUNT_PROFILE, schemas.public_.tables.pojos.AccountProfile.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.AccountProfile object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchById(Long... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.AccountProfile fetchOneById(Long value) {
        return fetchOne(AccountProfile.ACCOUNT_PROFILE.ID, value);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByCode(String... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.CODE, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByName(String... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.NAME, values);
    }

    /**
     * Fetch records that have <code>when_delete IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByWhenDelete(Timestamp... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.WHEN_DELETE, values);
    }

    /**
     * Fetch records that have <code>when_done IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByWhenDone(Timestamp... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.WHEN_DONE, values);
    }

    /**
     * Fetch records that have <code>when_update IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByWhenUpdate(Timestamp... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.WHEN_UPDATE, values);
    }

    /**
     * Fetch records that have <code>who_done IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AccountProfile> fetchByWhoDone(String... values) {
        return fetch(AccountProfile.ACCOUNT_PROFILE.WHO_DONE, values);
    }
}
