/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.AdditionalInfo;
import schemas.public_.tables.records.AdditionalInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalInfoDao extends DAOImpl<AdditionalInfoRecord, schemas.public_.tables.pojos.AdditionalInfo, Long> {

    /**
     * Create a new AdditionalInfoDao without any configuration
     */
    public AdditionalInfoDao() {
        super(AdditionalInfo.ADDITIONAL_INFO, schemas.public_.tables.pojos.AdditionalInfo.class);
    }

    /**
     * Create a new AdditionalInfoDao with an attached configuration
     */
    public AdditionalInfoDao(Configuration configuration) {
        super(AdditionalInfo.ADDITIONAL_INFO, schemas.public_.tables.pojos.AdditionalInfo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.AdditionalInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchById(Long... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.AdditionalInfo fetchOneById(Long value) {
        return fetchOne(AdditionalInfo.ADDITIONAL_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>student_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByStudentFk(String... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.STUDENT_FK, values);
    }

    /**
     * Fetch records that have <code>disability_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByDisabilityFk(Long... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.DISABILITY_FK, values);
    }

    /**
     * Fetch records that have <code>ethnicity_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByEthnicityFk(Long... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.ETHNICITY_FK, values);
    }

    /**
     * Fetch records that have <code>mother_tongue_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByMotherTongueFk(Long... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.MOTHER_TONGUE_FK, values);
    }

    /**
     * Fetch records that have <code>religion_fk IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByReligionFk(Long... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.RELIGION_FK, values);
    }

    /**
     * Fetch records that have <code>criminal_conviction IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByCriminalConviction(String... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.CRIMINAL_CONVICTION, values);
    }

    /**
     * Fetch records that have <code>bring_partner IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByBringPartner(String... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.BRING_PARTNER, values);
    }

    /**
     * Fetch records that have <code>disability IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByDisability(String... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.DISABILITY, values);
    }

    /**
     * Fetch records that have <code>ethnicity IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.AdditionalInfo> fetchByEthnicity(String... values) {
        return fetch(AdditionalInfo.ADDITIONAL_INFO.ETHNICITY, values);
    }
}
