/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import schemas.public_.tables.BankAccount;
import schemas.public_.tables.records.BankAccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankAccountDao extends DAOImpl<BankAccountRecord, schemas.public_.tables.pojos.BankAccount, Long> {

    /**
     * Create a new BankAccountDao without any configuration
     */
    public BankAccountDao() {
        super(BankAccount.BANK_ACCOUNT, schemas.public_.tables.pojos.BankAccount.class);
    }

    /**
     * Create a new BankAccountDao with an attached configuration
     */
    public BankAccountDao(Configuration configuration) {
        super(BankAccount.BANK_ACCOUNT, schemas.public_.tables.pojos.BankAccount.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(schemas.public_.tables.pojos.BankAccount object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.BankAccount> fetchById(Long... values) {
        return fetch(BankAccount.BANK_ACCOUNT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public schemas.public_.tables.pojos.BankAccount fetchOneById(Long value) {
        return fetchOne(BankAccount.BANK_ACCOUNT.ID, value);
    }

    /**
     * Fetch records that have <code>account_number IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.BankAccount> fetchByAccountNumber(Long... values) {
        return fetch(BankAccount.BANK_ACCOUNT.ACCOUNT_NUMBER, values);
    }

    /**
     * Fetch records that have <code>sort_code IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.BankAccount> fetchBySortCode(String... values) {
        return fetch(BankAccount.BANK_ACCOUNT.SORT_CODE, values);
    }

    /**
     * Fetch records that have <code>student_id IN (values)</code>
     */
    public List<schemas.public_.tables.pojos.BankAccount> fetchByStudentId(Long... values) {
        return fetch(BankAccount.BANK_ACCOUNT.STUDENT_ID, values);
    }
}
