/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.AdditionalInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalInfo extends TableImpl<AdditionalInfoRecord> {

    private static final long serialVersionUID = -253802100;

    /**
     * The reference instance of <code>public.additional_info</code>
     */
    public static final AdditionalInfo ADDITIONAL_INFO = new AdditionalInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdditionalInfoRecord> getRecordType() {
        return AdditionalInfoRecord.class;
    }

    /**
     * The column <code>public.additional_info.id</code>.
     */
    public final TableField<AdditionalInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('additional_info_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.additional_info.student_fk</code>.
     */
    public final TableField<AdditionalInfoRecord, String> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.additional_info.disability_fk</code>.
     */
    public final TableField<AdditionalInfoRecord, Long> DISABILITY_FK = createField("disability_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.additional_info.ethnicity_fk</code>.
     */
    public final TableField<AdditionalInfoRecord, Long> ETHNICITY_FK = createField("ethnicity_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.additional_info.mother_tongue_fk</code>.
     */
    public final TableField<AdditionalInfoRecord, Long> MOTHER_TONGUE_FK = createField("mother_tongue_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.additional_info.religion_fk</code>.
     */
    public final TableField<AdditionalInfoRecord, Long> RELIGION_FK = createField("religion_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.additional_info.criminal_conviction</code>.
     */
    public final TableField<AdditionalInfoRecord, String> CRIMINAL_CONVICTION = createField("criminal_conviction", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>public.additional_info.bring_partner</code>.
     */
    public final TableField<AdditionalInfoRecord, String> BRING_PARTNER = createField("bring_partner", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.additional_info.disability</code>.
     */
    public final TableField<AdditionalInfoRecord, String> DISABILITY = createField("disability", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.additional_info.ethnicity</code>.
     */
    public final TableField<AdditionalInfoRecord, String> ETHNICITY = createField("ethnicity", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.additional_info</code> table reference
     */
    public AdditionalInfo() {
        this("additional_info", null);
    }

    /**
     * Create an aliased <code>public.additional_info</code> table reference
     */
    public AdditionalInfo(String alias) {
        this(alias, ADDITIONAL_INFO);
    }

    private AdditionalInfo(String alias, Table<AdditionalInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdditionalInfo(String alias, Table<AdditionalInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AdditionalInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_ADDITIONAL_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AdditionalInfoRecord> getPrimaryKey() {
        return Keys.ADDTIONAL_INFO_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AdditionalInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<AdditionalInfoRecord>>asList(Keys.ADDTIONAL_INFO_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalInfo as(String alias) {
        return new AdditionalInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdditionalInfo rename(String name) {
        return new AdditionalInfo(name, null);
    }
}
