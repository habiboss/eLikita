/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.public_.tables.Finance;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FinanceRecord extends UpdatableRecordImpl<FinanceRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = -1033069692;

    /**
     * Setter for <code>public.finance.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.finance.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.finance.account_name</code>.
     */
    public void setAccountName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.finance.account_name</code>.
     */
    @Size(max = 255)
    public String getAccountName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.finance.account_number</code>.
     */
    public void setAccountNumber(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.finance.account_number</code>.
     */
    @Size(max = 255)
    public String getAccountNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.finance.sort_code</code>.
     */
    public void setSortCode(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.finance.sort_code</code>.
     */
    @Size(max = 255)
    public String getSortCode() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Finance.FINANCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Finance.FINANCE.ACCOUNT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Finance.FINANCE.ACCOUNT_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Finance.FINANCE.SORT_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAccountName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAccountNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSortCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinanceRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinanceRecord value2(String value) {
        setAccountName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinanceRecord value3(String value) {
        setAccountNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinanceRecord value4(String value) {
        setSortCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FinanceRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FinanceRecord
     */
    public FinanceRecord() {
        super(Finance.FINANCE);
    }

    /**
     * Create a detached, initialised FinanceRecord
     */
    public FinanceRecord(Long id, String accountName, String accountNumber, String sortCode) {
        super(Finance.FINANCE);

        set(0, id);
        set(1, accountName);
        set(2, accountNumber);
        set(3, sortCode);
    }
}
