/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.public_.tables.Lecturer;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LecturerRecord extends UpdatableRecordImpl<LecturerRecord> implements Record10<Long, Timestamp, String, String, byte[], String, String, String, Timestamp, String> {

    private static final long serialVersionUID = 1291759748;

    /**
     * Setter for <code>public.lecturer.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lecturer.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.lecturer.birth_date</code>.
     */
    public void setBirthDate(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lecturer.birth_date</code>.
     */
    public Timestamp getBirthDate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>public.lecturer.last_name</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lecturer.last_name</code>.
     */
    @Size(max = 255)
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lecturer.first_name</code>.
     */
    public void setFirstName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lecturer.first_name</code>.
     */
    @Size(max = 255)
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lecturer.gender</code>.
     */
    public void setGender(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lecturer.gender</code>.
     */
    public byte[] getGender() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>public.lecturer.middle_name</code>.
     */
    public void setMiddleName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lecturer.middle_name</code>.
     */
    @Size(max = 255)
    public String getMiddleName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.lecturer.prefered_name</code>.
     */
    public void setPreferedName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.lecturer.prefered_name</code>.
     */
    @Size(max = 255)
    public String getPreferedName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.lecturer.title</code>.
     */
    public void setTitle(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.lecturer.title</code>.
     */
    @Size(max = 255)
    public String getTitle() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.lecturer.date_of_birth</code>.
     */
    public void setDateOfBirth(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.lecturer.date_of_birth</code>.
     */
    public Timestamp getDateOfBirth() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>public.lecturer.family_name</code>.
     */
    public void setFamilyName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.lecturer.family_name</code>.
     */
    @Size(max = 255)
    public String getFamilyName() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Timestamp, String, String, byte[], String, String, String, Timestamp, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, Timestamp, String, String, byte[], String, String, String, Timestamp, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Lecturer.LECTURER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Lecturer.LECTURER.BIRTH_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Lecturer.LECTURER.LAST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Lecturer.LECTURER.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return Lecturer.LECTURER.GENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Lecturer.LECTURER.MIDDLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Lecturer.LECTURER.PREFERED_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Lecturer.LECTURER.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Lecturer.LECTURER.DATE_OF_BIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Lecturer.LECTURER.FAMILY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getLastName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getGender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPreferedName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getDateOfBirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getFamilyName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value2(Timestamp value) {
        setBirthDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value3(String value) {
        setLastName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value5(byte... value) {
        setGender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value6(String value) {
        setMiddleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value7(String value) {
        setPreferedName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value8(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value9(Timestamp value) {
        setDateOfBirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord value10(String value) {
        setFamilyName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LecturerRecord values(Long value1, Timestamp value2, String value3, String value4, byte[] value5, String value6, String value7, String value8, Timestamp value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LecturerRecord
     */
    public LecturerRecord() {
        super(Lecturer.LECTURER);
    }

    /**
     * Create a detached, initialised LecturerRecord
     */
    public LecturerRecord(Long id, Timestamp birthDate, String lastName, String firstName, byte[] gender, String middleName, String preferedName, String title, Timestamp dateOfBirth, String familyName) {
        super(Lecturer.LECTURER);

        set(0, id);
        set(1, birthDate);
        set(2, lastName);
        set(3, firstName);
        set(4, gender);
        set(5, middleName);
        set(6, preferedName);
        set(7, title);
        set(8, dateOfBirth);
        set(9, familyName);
    }
}
