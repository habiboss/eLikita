/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.public_.tables.Nationality;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NationalityRecord extends UpdatableRecordImpl<NationalityRecord> implements Record5<Long, String, String, String, Long> {

    private static final long serialVersionUID = 1652434941;

    /**
     * Setter for <code>public.nationality.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.nationality.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.nationality.country_birth</code>.
     */
    public void setCountryBirth(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.nationality.country_birth</code>.
     */
    @Size(max = 255)
    public String getCountryBirth() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.nationality.nationality</code>.
     */
    public void setNationality(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.nationality.nationality</code>.
     */
    @Size(max = 255)
    public String getNationality() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.nationality.second_nationality</code>.
     */
    public void setSecondNationality(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.nationality.second_nationality</code>.
     */
    @Size(max = 255)
    public String getSecondNationality() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.nationality.student_fk</code>.
     */
    public void setStudentFk(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.nationality.student_fk</code>.
     */
    public Long getStudentFk() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, String, String, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Nationality.NATIONALITY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Nationality.NATIONALITY.COUNTRY_BIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Nationality.NATIONALITY.NATIONALITY_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Nationality.NATIONALITY.SECOND_NATIONALITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return Nationality.NATIONALITY.STUDENT_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCountryBirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNationality();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSecondNationality();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getStudentFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord value2(String value) {
        setCountryBirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord value3(String value) {
        setNationality(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord value4(String value) {
        setSecondNationality(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord value5(Long value) {
        setStudentFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NationalityRecord values(Long value1, String value2, String value3, String value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NationalityRecord
     */
    public NationalityRecord() {
        super(Nationality.NATIONALITY);
    }

    /**
     * Create a detached, initialised NationalityRecord
     */
    public NationalityRecord(Long id, String countryBirth, String nationality, String secondNationality, Long studentFk) {
        super(Nationality.NATIONALITY);

        set(0, id);
        set(1, countryBirth);
        set(2, nationality);
        set(3, secondNationality);
        set(4, studentFk);
    }
}
