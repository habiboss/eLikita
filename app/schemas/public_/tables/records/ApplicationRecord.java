/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.public_.tables.Application;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationRecord extends UpdatableRecordImpl<ApplicationRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 128999189;

    /**
     * Setter for <code>public.application.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.application.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.application.course_fk</code>.
     */
    public void setCourseFk(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.application.course_fk</code>.
     */
    public Long getCourseFk() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.application.student_fk</code>.
     */
    public void setStudentFk(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.application.student_fk</code>.
     */
    public Long getStudentFk() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Application.APPLICATION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Application.APPLICATION.COURSE_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Application.APPLICATION.STUDENT_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCourseFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getStudentFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationRecord value2(Long value) {
        setCourseFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationRecord value3(Long value) {
        setStudentFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApplicationRecord
     */
    public ApplicationRecord() {
        super(Application.APPLICATION);
    }

    /**
     * Create a detached, initialised ApplicationRecord
     */
    public ApplicationRecord(Long id, Long courseFk, Long studentFk) {
        super(Application.APPLICATION);

        set(0, id);
        set(1, courseFk);
        set(2, studentFk);
    }
}
