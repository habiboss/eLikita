/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import schemas.public_.tables.PersonalDetail;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalDetailRecord extends UpdatableRecordImpl<PersonalDetailRecord> implements Record8<Long, Timestamp, String, String, byte[], String, String, String> {

    private static final long serialVersionUID = 587808879;

    /**
     * Setter for <code>public.personal_detail.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.personal_detail.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.personal_detail.date_of_birth</code>.
     */
    public void setDateOfBirth(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.personal_detail.date_of_birth</code>.
     */
    public Timestamp getDateOfBirth() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>public.personal_detail.family_name</code>.
     */
    public void setFamilyName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.personal_detail.family_name</code>.
     */
    @Size(max = 255)
    public String getFamilyName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.personal_detail.first_name</code>.
     */
    public void setFirstName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.personal_detail.first_name</code>.
     */
    @Size(max = 255)
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.personal_detail.gender</code>.
     */
    public void setGender(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.personal_detail.gender</code>.
     */
    public byte[] getGender() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>public.personal_detail.middle_name</code>.
     */
    public void setMiddleName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.personal_detail.middle_name</code>.
     */
    @Size(max = 255)
    public String getMiddleName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.personal_detail.prefered_name</code>.
     */
    public void setPreferedName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.personal_detail.prefered_name</code>.
     */
    @Size(max = 255)
    public String getPreferedName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.personal_detail.title</code>.
     */
    public void setTitle(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.personal_detail.title</code>.
     */
    @Size(max = 255)
    public String getTitle() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Timestamp, String, String, byte[], String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Timestamp, String, String, byte[], String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return PersonalDetail.PERSONAL_DETAIL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return PersonalDetail.PERSONAL_DETAIL.DATE_OF_BIRTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PersonalDetail.PERSONAL_DETAIL.FAMILY_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PersonalDetail.PERSONAL_DETAIL.FIRST_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field5() {
        return PersonalDetail.PERSONAL_DETAIL.GENDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return PersonalDetail.PERSONAL_DETAIL.MIDDLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return PersonalDetail.PERSONAL_DETAIL.PREFERED_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return PersonalDetail.PERSONAL_DETAIL.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getDateOfBirth();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getFamilyName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value5() {
        return getGender();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMiddleName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getPreferedName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value2(Timestamp value) {
        setDateOfBirth(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value3(String value) {
        setFamilyName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value5(byte... value) {
        setGender(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value6(String value) {
        setMiddleName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value7(String value) {
        setPreferedName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord value8(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonalDetailRecord values(Long value1, Timestamp value2, String value3, String value4, byte[] value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonalDetailRecord
     */
    public PersonalDetailRecord() {
        super(PersonalDetail.PERSONAL_DETAIL);
    }

    /**
     * Create a detached, initialised PersonalDetailRecord
     */
    public PersonalDetailRecord(Long id, Timestamp dateOfBirth, String familyName, String firstName, byte[] gender, String middleName, String preferedName, String title) {
        super(PersonalDetail.PERSONAL_DETAIL);

        set(0, id);
        set(1, dateOfBirth);
        set(2, familyName);
        set(3, firstName);
        set(4, gender);
        set(5, middleName);
        set(6, preferedName);
        set(7, title);
    }
}
