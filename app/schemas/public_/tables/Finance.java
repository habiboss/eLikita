/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.FinanceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Finance extends TableImpl<FinanceRecord> {

    private static final long serialVersionUID = -153645512;

    /**
     * The reference instance of <code>public.finance</code>
     */
    public static final Finance FINANCE = new Finance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FinanceRecord> getRecordType() {
        return FinanceRecord.class;
    }

    /**
     * The column <code>public.finance.id</code>.
     */
    public final TableField<FinanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.finance.account_name</code>.
     */
    public final TableField<FinanceRecord, String> ACCOUNT_NAME = createField("account_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.finance.account_number</code>.
     */
    public final TableField<FinanceRecord, String> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.finance.sort_code</code>.
     */
    public final TableField<FinanceRecord, String> SORT_CODE = createField("sort_code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.finance</code> table reference
     */
    public Finance() {
        this("finance", null);
    }

    /**
     * Create an aliased <code>public.finance</code> table reference
     */
    public Finance(String alias) {
        this(alias, FINANCE);
    }

    private Finance(String alias, Table<FinanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Finance(String alias, Table<FinanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FinanceRecord> getPrimaryKey() {
        return Keys.FINANCE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FinanceRecord>> getKeys() {
        return Arrays.<UniqueKey<FinanceRecord>>asList(Keys.FINANCE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Finance as(String alias) {
        return new Finance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Finance rename(String name) {
        return new Finance(name, null);
    }
}
