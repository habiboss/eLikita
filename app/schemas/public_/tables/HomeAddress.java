/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.HomeAddressRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HomeAddress extends TableImpl<HomeAddressRecord> {

    private static final long serialVersionUID = -1148038638;

    /**
     * The reference instance of <code>public.home_address</code>
     */
    public static final HomeAddress HOME_ADDRESS = new HomeAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HomeAddressRecord> getRecordType() {
        return HomeAddressRecord.class;
    }

    /**
     * The column <code>public.home_address.id</code>.
     */
    public final TableField<HomeAddressRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.home_address.city</code>.
     */
    public final TableField<HomeAddressRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.home_address.contact_address</code>.
     */
    public final TableField<HomeAddressRecord, String> CONTACT_ADDRESS = createField("contact_address", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.home_address.country</code>.
     */
    public final TableField<HomeAddressRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.home_address.postcode</code>.
     */
    public final TableField<HomeAddressRecord, String> POSTCODE = createField("postcode", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.home_address.region</code>.
     */
    public final TableField<HomeAddressRecord, String> REGION = createField("region", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.home_address.valid_until</code>.
     */
    public final TableField<HomeAddressRecord, Timestamp> VALID_UNTIL = createField("valid_until", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.home_address</code> table reference
     */
    public HomeAddress() {
        this("home_address", null);
    }

    /**
     * Create an aliased <code>public.home_address</code> table reference
     */
    public HomeAddress(String alias) {
        this(alias, HOME_ADDRESS);
    }

    private HomeAddress(String alias, Table<HomeAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private HomeAddress(String alias, Table<HomeAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HomeAddressRecord> getPrimaryKey() {
        return Keys.HOME_ADDRESS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HomeAddressRecord>> getKeys() {
        return Arrays.<UniqueKey<HomeAddressRecord>>asList(Keys.HOME_ADDRESS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HomeAddress as(String alias) {
        return new HomeAddress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HomeAddress rename(String name) {
        return new HomeAddress(name, null);
    }
}
