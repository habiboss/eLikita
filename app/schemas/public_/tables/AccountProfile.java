/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.AccountProfileRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountProfile extends TableImpl<AccountProfileRecord> {

    private static final long serialVersionUID = -2053676012;

    /**
     * The reference instance of <code>public.account_profile</code>
     */
    public static final AccountProfile ACCOUNT_PROFILE = new AccountProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccountProfileRecord> getRecordType() {
        return AccountProfileRecord.class;
    }

    /**
     * The column <code>public.account_profile.id</code>.
     */
    public final TableField<AccountProfileRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.account_profile.code</code>.
     */
    public final TableField<AccountProfileRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.account_profile.name</code>.
     */
    public final TableField<AccountProfileRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.account_profile.when_delete</code>.
     */
    public final TableField<AccountProfileRecord, Timestamp> WHEN_DELETE = createField("when_delete", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.account_profile.when_done</code>.
     */
    public final TableField<AccountProfileRecord, Timestamp> WHEN_DONE = createField("when_done", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.account_profile.when_update</code>.
     */
    public final TableField<AccountProfileRecord, Timestamp> WHEN_UPDATE = createField("when_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.account_profile.who_done</code>.
     */
    public final TableField<AccountProfileRecord, String> WHO_DONE = createField("who_done", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>public.account_profile</code> table reference
     */
    public AccountProfile() {
        this("account_profile", null);
    }

    /**
     * Create an aliased <code>public.account_profile</code> table reference
     */
    public AccountProfile(String alias) {
        this(alias, ACCOUNT_PROFILE);
    }

    private AccountProfile(String alias, Table<AccountProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccountProfile(String alias, Table<AccountProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AccountProfileRecord> getPrimaryKey() {
        return Keys.ACCOUNT_PROFILE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AccountProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<AccountProfileRecord>>asList(Keys.ACCOUNT_PROFILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AccountProfile as(String alias) {
        return new AccountProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccountProfile rename(String name) {
        return new AccountProfile(name, null);
    }
}
