/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.ParentInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ParentInfo extends TableImpl<ParentInfoRecord> {

    private static final long serialVersionUID = -2038804267;

    /**
     * The reference instance of <code>public.parent_info</code>
     */
    public static final ParentInfo PARENT_INFO = new ParentInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ParentInfoRecord> getRecordType() {
        return ParentInfoRecord.class;
    }

    /**
     * The column <code>public.parent_info.id</code>.
     */
    public final TableField<ParentInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.parent_info.date_of_birth</code>.
     */
    public final TableField<ParentInfoRecord, Timestamp> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.parent_info.first_name</code>.
     */
    public final TableField<ParentInfoRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.parent_info.gender</code>.
     */
    public final TableField<ParentInfoRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.parent_info.last_name</code>.
     */
    public final TableField<ParentInfoRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.parent_info.other_info</code>.
     */
    public final TableField<ParentInfoRecord, Timestamp> OTHER_INFO = createField("other_info", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.parent_info.student_fk</code>.
     */
    public final TableField<ParentInfoRecord, Long> STUDENT_FK = createField("student_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.parent_info</code> table reference
     */
    public ParentInfo() {
        this("parent_info", null);
    }

    /**
     * Create an aliased <code>public.parent_info</code> table reference
     */
    public ParentInfo(String alias) {
        this(alias, PARENT_INFO);
    }

    private ParentInfo(String alias, Table<ParentInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ParentInfo(String alias, Table<ParentInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ParentInfoRecord> getPrimaryKey() {
        return Keys.PARENT_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ParentInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<ParentInfoRecord>>asList(Keys.PARENT_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ParentInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ParentInfoRecord, ?>>asList(Keys.PARENT_INFO__FK30EM3QY0X7NF6AFKDTJGGO0JT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParentInfo as(String alias) {
        return new ParentInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ParentInfo rename(String name) {
        return new ParentInfo(name, null);
    }
}
