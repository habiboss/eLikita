/*
 * This file is generated by jOOQ.
*/
package schemas.public_.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import schemas.public_.Keys;
import schemas.public_.Public;
import schemas.public_.tables.records.AboutInstitutionRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AboutInstitution extends TableImpl<AboutInstitutionRecord> {

    private static final long serialVersionUID = 1223148271;

    /**
     * The reference instance of <code>public.about_institution</code>
     */
    public static final AboutInstitution ABOUT_INSTITUTION = new AboutInstitution();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AboutInstitutionRecord> getRecordType() {
        return AboutInstitutionRecord.class;
    }

    /**
     * The column <code>public.about_institution.institution_name</code>.
     */
    public final TableField<AboutInstitutionRecord, String> INSTITUTION_NAME = createField("institution_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.address</code>.
     */
    public final TableField<AboutInstitutionRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.city</code>.
     */
    public final TableField<AboutInstitutionRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.codeid</code>.
     */
    public final TableField<AboutInstitutionRecord, String> CODEID = createField("codeid", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.country</code>.
     */
    public final TableField<AboutInstitutionRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.description</code>.
     */
    public final TableField<AboutInstitutionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.email</code>.
     */
    public final TableField<AboutInstitutionRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.postcode</code>.
     */
    public final TableField<AboutInstitutionRecord, String> POSTCODE = createField("postcode", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.region</code>.
     */
    public final TableField<AboutInstitutionRecord, String> REGION = createField("region", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.website</code>.
     */
    public final TableField<AboutInstitutionRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.about_institution.id</code>.
     */
    public final TableField<AboutInstitutionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('about_institution_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>public.about_institution</code> table reference
     */
    public AboutInstitution() {
        this("about_institution", null);
    }

    /**
     * Create an aliased <code>public.about_institution</code> table reference
     */
    public AboutInstitution(String alias) {
        this(alias, ABOUT_INSTITUTION);
    }

    private AboutInstitution(String alias, Table<AboutInstitutionRecord> aliased) {
        this(alias, aliased, null);
    }

    private AboutInstitution(String alias, Table<AboutInstitutionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AboutInstitutionRecord, Long> getIdentity() {
        return Keys.IDENTITY_ABOUT_INSTITUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AboutInstitutionRecord> getPrimaryKey() {
        return Keys.ABOUT_INSTITUTION_PK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AboutInstitutionRecord>> getKeys() {
        return Arrays.<UniqueKey<AboutInstitutionRecord>>asList(Keys.ABOUT_INSTITUTION_PK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AboutInstitution as(String alias) {
        return new AboutInstitution(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AboutInstitution rename(String name) {
        return new AboutInstitution(name, null);
    }
}
